--- a/net/minecraft/world/entity/LivingEntity.java
+++ b/net/minecraft/world/entity/LivingEntity.java
@@ -1,5 +_,7 @@
 package net.minecraft.world.entity;
 
+import catserver.server.CatServerCaptures;
+import com.google.common.base.Function;
 import com.google.common.base.Objects;
 import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableMap;
@@ -9,14 +_,8 @@
 import com.mojang.logging.LogUtils;
 import com.mojang.serialization.DataResult;
 import com.mojang.serialization.Dynamic;
-import java.util.Collection;
-import java.util.ConcurrentModificationException;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Optional;
-import java.util.Random;
-import java.util.UUID;
+
+import java.util.*;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
 import net.minecraft.BlockUtil;
@@ -28,10 +_,7 @@
 import net.minecraft.core.particles.BlockParticleOption;
 import net.minecraft.core.particles.ItemParticleOption;
 import net.minecraft.core.particles.ParticleTypes;
-import net.minecraft.nbt.CompoundTag;
-import net.minecraft.nbt.ListTag;
-import net.minecraft.nbt.NbtOps;
-import net.minecraft.nbt.Tag;
+import net.minecraft.nbt.*;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.game.ClientboundAddMobPacket;
 import net.minecraft.network.protocol.game.ClientboundAnimatePacket;
@@ -74,8 +_,8 @@
 import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.ai.attributes.DefaultAttributes;
 import net.minecraft.world.entity.ai.targeting.TargetingConditions;
+import net.minecraft.world.entity.animal.Animal;
 import net.minecraft.world.entity.animal.FlyingAnimal;
-import net.minecraft.world.entity.animal.Wolf;
 import net.minecraft.world.entity.boss.wither.WitherBoss;
 import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.player.Player;
@@ -115,6 +_,14 @@
 import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.scores.PlayerTeam;
+import net.minecraftforge.common.ForgeHooks;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.v1_18_R2.SpigotTimings;
+import org.bukkit.craftbukkit.v1_18_R2.attribute.CraftAttributeMap;
+import org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_18_R2.inventory.CraftItemStack;
+import org.bukkit.event.entity.*;
+import org.bukkit.event.player.PlayerItemConsumeEvent;
 import org.slf4j.Logger;
 
 public abstract class LivingEntity extends Entity {
@@ -122,7 +_,9 @@
    private static final UUID f_20929_ = UUID.fromString("662A6B8D-DA3E-4C1C-8813-96EA6097278D");
    private static final UUID f_20959_ = UUID.fromString("87f46a96-686f-4796-b035-22e16ee9e038");
    private static final UUID f_147184_ = UUID.fromString("1eaf83ff-7207-4596-b37a-d7a07b3ec4ce");
+   private static final UUID SLOW_FALLING_ID = UUID.fromString("A5B6CF2A-2F7C-31EF-9022-7C3E7D5E6ABA");
    private static final AttributeModifier f_20960_ = new AttributeModifier(f_20929_, "Sprinting speed boost", (double)0.3F, AttributeModifier.Operation.MULTIPLY_TOTAL);
+   private static final AttributeModifier SLOW_FALLING = new AttributeModifier(SLOW_FALLING_ID, "Slow falling acceleration reduction", -0.07, AttributeModifier.Operation.ADDITION); // Add -0.07 to 0.08 so we get the vanilla default of 0.01
    public static final int f_147166_ = 2;
    public static final int f_147167_ = 4;
    public static final int f_147168_ = 98;
@@ -142,18 +_,18 @@
    protected static final int f_147177_ = 2;
    protected static final int f_147163_ = 4;
    protected static final EntityDataAccessor<Byte> f_20909_ = SynchedEntityData.m_135353_(LivingEntity.class, EntityDataSerializers.f_135027_);
-   private static final EntityDataAccessor<Float> f_20961_ = SynchedEntityData.m_135353_(LivingEntity.class, EntityDataSerializers.f_135029_);
+   public static final EntityDataAccessor<Float> f_20961_ = SynchedEntityData.m_135353_(LivingEntity.class, EntityDataSerializers.f_135029_);
    private static final EntityDataAccessor<Integer> f_20962_ = SynchedEntityData.m_135353_(LivingEntity.class, EntityDataSerializers.f_135028_);
    private static final EntityDataAccessor<Boolean> f_20963_ = SynchedEntityData.m_135353_(LivingEntity.class, EntityDataSerializers.f_135035_);
-   private static final EntityDataAccessor<Integer> f_20940_ = SynchedEntityData.m_135353_(LivingEntity.class, EntityDataSerializers.f_135028_);
+   public static final EntityDataAccessor<Integer> f_20940_ = SynchedEntityData.m_135353_(LivingEntity.class, EntityDataSerializers.f_135028_);
    private static final EntityDataAccessor<Integer> f_20941_ = SynchedEntityData.m_135353_(LivingEntity.class, EntityDataSerializers.f_135028_);
    private static final EntityDataAccessor<Optional<BlockPos>> f_20942_ = SynchedEntityData.m_135353_(LivingEntity.class, EntityDataSerializers.f_135039_);
    protected static final float f_147164_ = 1.74F;
    protected static final EntityDimensions f_20910_ = EntityDimensions.m_20398_(0.2F, 0.2F);
    public static final float f_147165_ = 0.5F;
    private final AttributeMap f_20943_;
-   private final CombatTracker f_20944_ = new CombatTracker(this);
-   private final Map<MobEffect, MobEffectInstance> f_20945_ = Maps.newHashMap();
+   public CombatTracker f_20944_ = new CombatTracker(this);
+   public final Map<MobEffect, MobEffectInstance> f_20945_ = Maps.newHashMap();
    private final NonNullList<ItemStack> f_20946_ = NonNullList.m_122780_(2, ItemStack.f_41583_);
    private final NonNullList<ItemStack> f_20947_ = NonNullList.m_122780_(4, ItemStack.f_41583_);
    public boolean f_20911_;
@@ -172,7 +_,7 @@
    public float f_20923_;
    public float f_20924_;
    public float f_20925_;
-   public final int f_20926_ = 20;
+   public int f_20926_ = 20;
    public final float f_20927_;
    public final float f_20928_;
    public float f_20883_;
@@ -181,7 +_,7 @@
    public float f_20886_;
    public float f_20887_ = 0.02F;
    @Nullable
-   protected Player f_20888_;
+   public Player f_20888_;
    protected int f_20889_;
    protected boolean f_20890_;
    protected int f_20891_;
@@ -191,7 +_,7 @@
    protected float f_20895_;
    protected float f_20896_;
    protected int f_20897_;
-   protected float f_20898_;
+   public float f_20898_;
    protected boolean f_20899_;
    public float f_20900_;
    public float f_20901_;
@@ -204,10 +_,10 @@
    protected double f_20908_;
    protected double f_20933_;
    protected int f_20934_;
-   private boolean f_20948_ = true;
+   public boolean f_20948_ = true;
    @Nullable
-   private LivingEntity f_20949_;
-   private int f_20950_;
+   public LivingEntity f_20949_;
+   public int f_20950_;
    private LivingEntity f_20951_;
    private int f_20952_;
    private float f_20953_;
@@ -225,11 +_,34 @@
    private float f_20931_;
    private float f_20932_;
    protected Brain<?> f_20939_;
+   // CraftBukkit start
+   public int expToDrop;
+   public boolean forceDrops;
+   public ArrayList<org.bukkit.inventory.ItemStack> drops = new ArrayList<org.bukkit.inventory.ItemStack>();
+   public final org.bukkit.craftbukkit.v1_18_R2.attribute.CraftAttributeMap craftAttributes;
+   public boolean collides = true;
+   public Set<UUID> collidableExemptions = new HashSet<>();
+   public boolean bukkitPickUpLoot;
+
+   @Override
+   public float getBukkitYaw() {
+      return m_6080_();
+   }
+   // CraftBukkit end
+
+   // Spigot start
+   public void inactiveTick() {
+      super.inactiveTick();
+      ++this.f_20891_; // Above all the floats
+   }
+   // Spigot end
 
    protected LivingEntity(EntityType<? extends LivingEntity> p_20966_, Level p_20967_) {
       super(p_20966_, p_20967_);
       this.f_20943_ = new AttributeMap(DefaultAttributes.m_22297_(p_20966_));
-      this.m_21153_(this.m_21233_());
+      this.craftAttributes = new CraftAttributeMap(f_20943_); // CraftBukkit
+      // CraftBukkit - setHealth(getMaxHealth()) inlined and simplified to skip the instanceof check for EntityPlayer, as getBukkitEntity() is not initialized in constructor
+      this.f_19804_.m_135381_(LivingEntity.f_20961_, (float) this.m_21051_(Attributes.f_22276_).m_22135_());
       this.f_19850_ = true;
       this.f_20928_ = (float)((Math.random() + 1.0D) * (double)0.01F);
       this.m_20090_();
@@ -272,7 +_,7 @@
    }
 
    public static AttributeSupplier.Builder m_21183_() {
-      return AttributeSupplier.m_22244_().m_22266_(Attributes.f_22276_).m_22266_(Attributes.f_22278_).m_22266_(Attributes.f_22279_).m_22266_(Attributes.f_22284_).m_22266_(Attributes.f_22285_);
+      return AttributeSupplier.m_22244_().m_22266_(Attributes.f_22276_).m_22266_(Attributes.f_22278_).m_22266_(Attributes.f_22279_).m_22266_(Attributes.f_22284_).m_22266_(Attributes.f_22285_).m_22266_(net.minecraftforge.common.ForgeMod.SWIM_SPEED.get()).m_22266_(net.minecraftforge.common.ForgeMod.NAMETAG_DISTANCE.get()).m_22266_(net.minecraftforge.common.ForgeMod.ENTITY_GRAVITY.get()).m_22266_(net.minecraftforge.common.ForgeMod.STEP_HEIGHT_ADDITION.get());
    }
 
    protected void m_7840_(double p_20990_, boolean p_20991_, BlockState p_20992_, BlockPos p_20993_) {
@@ -290,7 +_,14 @@
          if (!p_20992_.m_60795_()) {
             double d0 = Math.min((double)(0.2F + f / 15.0F), 2.5D);
             int i = (int)(150.0D * d0);
-            ((ServerLevel)this.f_19853_).m_8767_(new BlockParticleOption(ParticleTypes.f_123794_, p_20992_), this.m_20185_(), this.m_20186_(), this.m_20189_(), i, 0.0D, 0.0D, 0.0D, (double)0.15F);
+            if (!p_20992_.addLandingEffects((ServerLevel)this.f_19853_, p_20993_, p_20992_, this, i))
+               // CraftBukkit start - visiblity api
+               if (this instanceof ServerPlayer) {
+                  ((ServerLevel) this.f_19853_).sendParticles((ServerPlayer) this, new BlockParticleOption(ParticleTypes.f_123794_, p_20992_), this.m_20185_(), this.m_20186_(), this.m_20189_(), i, 0.0D, 0.0D, 0.0D, 0.15000000596046448D, false);
+               } else {
+                  ((ServerLevel) this.f_19853_).m_8767_(new BlockParticleOption(ParticleTypes.f_123794_, p_20992_), this.m_20185_(), this.m_20186_(), this.m_20189_(), i, 0.0D, 0.0D, 0.0D, 0.15000000596046448D);
+               }
+            // CraftBukkit end
          }
       }
 
@@ -354,7 +_,7 @@
                }
             }
 
-            if (!this.f_19853_.f_46443_ && this.m_20159_() && this.m_20202_() != null && !this.m_20202_().m_6146_()) {
+            if (!this.f_19853_.f_46443_ && this.m_20159_() && this.m_20202_() != null && !this.m_20202_().canBeRiddenInWater(this)) {
                this.m_8127_();
             }
          } else if (this.m_20146_() < this.m_6062_()) {
@@ -619,8 +_,14 @@
    }
 
    protected void m_147218_(ItemStack p_147219_) {
+      // CraftBukkit start
+      this.equipEventAndSound(p_147219_, false);
+   }
+
+   protected void equipEventAndSound(ItemStack p_147219_, boolean slient) {
       SoundEvent soundevent = p_147219_.m_150920_();
-      if (!p_147219_.m_41619_() && soundevent != null && !this.m_5833_()) {
+      if (!p_147219_.m_41619_() && soundevent != null && !this.m_5833_() && !slient) {
+         // CraftBukkit end
          this.m_146850_(GameEvent.f_157811_);
          this.m_5496_(soundevent, 1.0F, 1.0F);
       }
@@ -673,6 +_,17 @@
          }
       }
 
+      // CraftBukkit start
+      if (p_21096_.m_128441_("Bukkit.MaxHealth")) {
+         Tag nbtbase = p_21096_.m_128423_("Bukkit.MaxHealth");
+         if (nbtbase.m_7060_() == 5) {
+            this.m_21051_(Attributes.f_22276_).m_22100_(((FloatTag) nbtbase).m_7061_());
+         } else if (nbtbase.m_7060_() == 3) {
+            this.m_21051_(Attributes.f_22276_).m_22100_(((FloatTag) nbtbase).m_7061_());
+         }
+      }
+      // CraftBukkit end
+
       if (p_21096_.m_128425_("Health", 99)) {
          this.m_21153_(p_21096_.m_128457_("Health"));
       }
@@ -708,9 +_,31 @@
 
    }
 
+   // CraftBukkit start
+   private boolean isTickingEffects = false;
+   private List<ProcessableEffect> effectsToProcess = Lists.newArrayList();
+
+   private static class ProcessableEffect {
+
+      private MobEffect type;
+      private MobEffectInstance effect;
+      private final EntityPotionEffectEvent.Cause cause;
+
+      private ProcessableEffect(MobEffectInstance effect, EntityPotionEffectEvent.Cause cause) {
+         this.effect = effect;
+         this.cause = cause;
+      }
+      private ProcessableEffect(MobEffect type, EntityPotionEffectEvent.Cause cause) {
+         this.type = type;
+         this.cause = cause;
+      }
+   }
+   // CraftBukkit end
+
    protected void m_21217_() {
       Iterator<MobEffect> iterator = this.f_20945_.keySet().iterator();
 
+      isTickingEffects = true; // CraftBukkit
       try {
          while(iterator.hasNext()) {
             MobEffect mobeffect = iterator.next();
@@ -718,7 +_,13 @@
             if (!mobeffectinstance.m_19552_(this, () -> {
                this.m_141973_(mobeffectinstance, true, (Entity)null);
             })) {
-               if (!this.f_19853_.f_46443_) {
+               if (!this.f_19853_.f_46443_ && !net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.PotionEvent.PotionExpiryEvent(this, mobeffectinstance))) {
+                  // CraftBukkit start
+                  EntityPotionEffectEvent event = CraftEventFactory.callEntityPotionEffectChangeEvent(this, mobeffectinstance, null, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.EXPIRATION);
+                  if (event.isCancelled()) {
+                     continue;
+                  }
+                  // CraftBukkit end
                   iterator.remove();
                   this.m_7285_(mobeffectinstance);
                }
@@ -729,6 +_,18 @@
       } catch (ConcurrentModificationException concurrentmodificationexception) {
       }
 
+      // CraftBukkit start
+      isTickingEffects = false;
+      for (ProcessableEffect e : effectsToProcess) {
+         if (e.effect != null) {
+            addEffect(e.effect, e.cause);
+         } else {
+            removeEffect(e.type, e.cause);
+         }
+      }
+      effectsToProcess.clear();
+      // CraftBukkit end
+
       if (this.f_20948_) {
          if (!this.f_19853_.f_46443_) {
             this.m_8034_();
@@ -768,8 +_,10 @@
          this.m_6842_(false);
       } else {
          Collection<MobEffectInstance> collection = this.f_20945_.values();
-         this.f_19804_.m_135381_(f_20963_, m_21179_(collection));
-         this.f_19804_.m_135381_(f_20962_, PotionUtils.m_43564_(collection));
+         net.minecraftforge.event.entity.living.PotionColorCalculationEvent event = new net.minecraftforge.event.entity.living.PotionColorCalculationEvent(this, PotionUtils.m_43564_(collection), m_21179_(collection), collection);
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event);
+         this.f_19804_.m_135381_(f_20963_, event.areParticlesHidden());
+         this.f_19804_.m_135381_(f_20962_, event.getColor());
          this.m_6842_(this.m_21023_(MobEffects.f_19609_));
       }
 
@@ -805,7 +_,7 @@
             d0 *= 0.5D;
          }
       }
-
+      d0 = net.minecraftforge.common.ForgeHooks.getEntityVisibilityMultiplier(this, p_20969_, d0);
       return d0;
    }
 
@@ -841,14 +_,27 @@
    }
 
    public boolean m_21219_() {
+      // CraftBukkit start
+      return this.removeAllEffects(EntityPotionEffectEvent.Cause.UNKNOWN);
+   }
+
+   public boolean removeAllEffects(org.bukkit.event.entity.EntityPotionEffectEvent.Cause cause) {
+      // CraftBukkit end
       if (this.f_19853_.f_46443_) {
          return false;
       } else {
          Iterator<MobEffectInstance> iterator = this.f_20945_.values().iterator();
-
          boolean flag;
          for(flag = false; iterator.hasNext(); flag = true) {
-            this.m_7285_(iterator.next());
+            MobEffectInstance effect = iterator.next();
+            if(net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.PotionEvent.PotionRemoveEvent(this, effect))) continue;
+            // CraftBukkit start
+            EntityPotionEffectEvent event = CraftEventFactory.callEntityPotionEffectChangeEvent(this, effect, null, cause, EntityPotionEffectEvent.Action.CLEARED);
+            if (event.isCancelled()) {
+               continue;
+            }
+            // CraftBukkit end
+            this.m_7285_(effect);
             iterator.remove();
          }
 
@@ -877,25 +_,55 @@
       return this.m_147207_(p_21165_, (Entity)null);
    }
 
+   public boolean addEffect(MobEffectInstance mobeffect, EntityPotionEffectEvent.Cause cause) {
+      return this.addEffect(mobeffect, null, cause);
+   }
+
    public boolean m_147207_(MobEffectInstance p_147208_, @Nullable Entity p_147209_) {
+      // CraftBukkit start
+      return this.addEffect(p_147208_, p_147209_, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.UNKNOWN);
+   }
+
+   public boolean addEffect(MobEffectInstance p_147208_, @Nullable Entity p_147209_, EntityPotionEffectEvent.Cause cause) {
+      if (isTickingEffects) {
+         effectsToProcess.add(new ProcessableEffect(p_147208_, cause));
+         return true;
+      }
+      // CraftBukkit end
       if (!this.m_7301_(p_147208_)) {
          return false;
       } else {
          MobEffectInstance mobeffectinstance = this.f_20945_.get(p_147208_.m_19544_());
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.PotionEvent.PotionAddedEvent(this, mobeffectinstance, p_147208_, p_147209_));
+         // CraftBukkit start
+         boolean override = false;
+         if (mobeffectinstance != null) {
+            override = new MobEffectInstance(mobeffectinstance).m_19558_(p_147208_);
+         }
+         EntityPotionEffectEvent event = CraftEventFactory.callEntityPotionEffectChangeEvent(this, mobeffectinstance, p_147208_, cause, override);
+         if (event.isCancelled()) {
+            return false;
+         }
          if (mobeffectinstance == null) {
             this.f_20945_.put(p_147208_.m_19544_(), p_147208_);
             this.m_142540_(p_147208_, p_147209_);
             return true;
-         } else if (mobeffectinstance.m_19558_(p_147208_)) {
+         } else if (event.isOverride()) {
+            mobeffectinstance.m_19558_(p_147208_);
             this.m_141973_(mobeffectinstance, true, p_147209_);
+            // CraftBukkit end
             return true;
          } else {
             return false;
          }
       }
    }
+   // CatServer end
 
    public boolean m_7301_(MobEffectInstance p_21197_) {
+      net.minecraftforge.event.entity.living.PotionEvent.PotionApplicableEvent event = new net.minecraftforge.event.entity.living.PotionEvent.PotionApplicableEvent(this, p_21197_);
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event);
+      if (event.getResult() != net.minecraftforge.eventbus.api.Event.Result.DEFAULT) return event.getResult() == net.minecraftforge.eventbus.api.Event.Result.ALLOW;
       if (this.m_6336_() == MobType.f_21641_) {
          MobEffect mobeffect = p_21197_.m_19544_();
          if (mobeffect == MobEffects.f_19605_ || mobeffect == MobEffects.f_19614_) {
@@ -922,13 +_,37 @@
       return this.m_6336_() == MobType.f_21641_;
    }
 
+   // CatServer start
    @Nullable
    public MobEffectInstance m_6234_(@Nullable MobEffect p_21164_) {
+      return removeEffectNoUpdate(p_21164_, EntityPotionEffectEvent.Cause.UNKNOWN);
+   }
+
+   @Nullable
+   public MobEffectInstance removeEffectNoUpdate(@Nullable MobEffect p_21164_, EntityPotionEffectEvent.Cause cause) {
+      if (isTickingEffects) {
+         effectsToProcess.add(new ProcessableEffect(p_21164_, cause));
+         return null;
+      }
+      MobEffectInstance effect = this.f_20945_.get(p_21164_);
+      if (effect == null) {
+         return null;
+      }
+      EntityPotionEffectEvent event = CraftEventFactory.callEntityPotionEffectChangeEvent(this, effect, null, cause);
+      if (event.isCancelled()) {
+         return null;
+      }
       return this.f_20945_.remove(p_21164_);
    }
 
    public boolean m_21195_(MobEffect p_21196_) {
-      MobEffectInstance mobeffectinstance = this.m_6234_(p_21196_);
+      // CraftBukkit start
+      return removeEffect(p_21196_, EntityPotionEffectEvent.Cause.UNKNOWN);
+   }
+
+   public boolean removeEffect(MobEffect p_21196_, EntityPotionEffectEvent.Cause cause) {
+      if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.PotionEvent.PotionRemoveEvent(this, p_21196_))) return false;
+      MobEffectInstance mobeffectinstance = this.removeEffectNoUpdate(p_21196_, cause); // CraftBukkit
       if (mobeffectinstance != null) {
          this.m_7285_(mobeffectinstance);
          return true;
@@ -936,6 +_,7 @@
          return false;
       }
    }
+   // CatServer end
 
    protected void m_142540_(MobEffectInstance p_147190_, @Nullable Entity p_147191_) {
       this.f_20948_ = true;
@@ -963,19 +_,53 @@
 
    }
 
+   // CatServer start
    public void m_5634_(float p_21116_) {
+      this.heal(p_21116_, EntityRegainHealthEvent.RegainReason.CUSTOM);
+   }
+
+   public void heal(float p_21116_, EntityRegainHealthEvent.RegainReason regainReason) {
+      p_21116_ = net.minecraftforge.event.ForgeEventFactory.onLivingHeal(this, p_21116_);
+      if (p_21116_ <= 0) return;
       float f = this.m_21223_();
       if (f > 0.0F) {
-         this.m_21153_(f + p_21116_);
+         EntityRegainHealthEvent event = new EntityRegainHealthEvent(this.getBukkitEntity(), p_21116_, regainReason);
+         // Suppress during worldgen
+         if (this.valid) {
+            this.f_19853_.getCraftServer().getPluginManager().callEvent(event);
+         }
+         if (!event.isCancelled()) {
+            this.m_21153_((float) (this.m_21223_() + event.getAmount()));
+         }
       }
-
    }
+   // CatServer end
 
    public float m_21223_() {
+      // CraftBukkit start - Use unscaled health
+      if (this instanceof ServerPlayer) {
+         return (float) ((ServerPlayer) this).getBukkitEntity().getHealth();
+      }
+      // CraftBukkit end
       return this.f_19804_.m_135370_(f_20961_);
    }
 
    public void m_21153_(float p_21154_) {
+      // CraftBukkit start - Handle scaled health
+      if (this instanceof ServerPlayer) {
+         org.bukkit.craftbukkit.v1_18_R2.entity.CraftPlayer player = ((ServerPlayer) this).getBukkitEntity();
+         // Squeeze
+         if (p_21154_ < 0.0F) {
+            player.setRealHealth(0.0D);
+         } else if (p_21154_ > player.getMaxHealth()) {
+            player.setRealHealth(player.getMaxHealth());
+         } else {
+            player.setRealHealth(p_21154_);
+         }
+         player.updateScaledHealth(false);
+         return;
+      }
+      // CraftBukkit end
       this.f_19804_.m_135381_(f_20961_, Mth.m_14036_(p_21154_, 0.0F, this.m_21233_()));
    }
 
@@ -984,11 +_,12 @@
    }
 
    public boolean m_6469_(DamageSource p_21016_, float p_21017_) {
+      if (!net.minecraftforge.common.ForgeHooks.onLivingAttack(this, p_21016_, p_21017_)) return false;
       if (this.m_6673_(p_21016_)) {
          return false;
       } else if (this.f_19853_.f_46443_) {
          return false;
-      } else if (this.m_21224_()) {
+      } else if (this.m_146910_() || this.f_20890_ || this.m_21223_() <= 0.0F) { // CraftBukkit - Don't allow entities that got set to dead/killed elsewhere to get damaged and die
          return false;
       } else if (p_21016_.m_19384_() && this.m_21023_(MobEffects.f_19607_)) {
          return false;
@@ -999,12 +_,15 @@
 
          this.f_20891_ = 0;
          float f = p_21017_;
-         boolean flag = false;
+         boolean flag = p_21017_ > 0.0F && this.m_21275_(p_21016_); // Copied from below
          float f1 = 0.0F;
-         if (p_21017_ > 0.0F && this.m_21275_(p_21016_)) {
-            this.m_7909_(p_21017_);
-            f1 = p_21017_;
-            p_21017_ = 0.0F;
+         // CraftBukkit - Moved into damageEntity0(DamageSource, float)
+         if (false && p_21017_ > 0.0F && this.m_21275_(p_21016_)) {
+            net.minecraftforge.event.entity.living.ShieldBlockEvent ev = net.minecraftforge.common.ForgeHooks.onShieldBlock(this, p_21016_, p_21017_);
+            if(!ev.isCanceled()) {
+            if(ev.shieldTakesDamage()) this.m_7909_(p_21017_);
+            f1 = ev.getBlockedDamage();
+            p_21017_ -= ev.getBlockedDamage();
             if (!p_21016_.m_19360_()) {
                Entity entity = p_21016_.m_7640_();
                if (entity instanceof LivingEntity) {
@@ -1014,30 +_,49 @@
 
             flag = true;
          }
+         }
 
          this.f_20924_ = 1.5F;
          boolean flag1 = true;
-         if ((float)this.f_19802_ > 10.0F) {
+         if ((float)this.f_19802_ > this.f_20926_ / 2.0F) { // CraftBukkit - restore use of maxNoDamageTicks
             if (p_21017_ <= this.f_20898_) {
                return false;
             }
-
-            this.m_6475_(p_21016_, p_21017_ - this.f_20898_);
+            // CraftBukkit start
+            if (!this.damageEntity0(p_21016_, p_21017_ - this.f_20898_)) {
+               return false;
+            }
+            // CraftBukkit end
             this.f_20898_ = p_21017_;
             flag1 = false;
          } else {
+            // CraftBukkit start
+            if (!this.damageEntity0(p_21016_, p_21017_)) {
+               return false;
+            }
             this.f_20898_ = p_21017_;
-            this.f_19802_ = 20;
-            this.m_6475_(p_21016_, p_21017_);
+            this.f_19802_ = this.f_20926_; // CraftBukkit - restore use of maxNoDamageTicks
+            // this.actuallyHurt(p_21016_, p_21017_);
+            // CraftBukkit end
             this.f_20917_ = 10;
             this.f_20916_ = this.f_20917_;
          }
 
-         if (p_21016_.m_146705_() && !this.m_6844_(EquipmentSlot.HEAD).m_41619_()) {
+         // CraftBukkit - Moved into damageEntity0(DamageSource, float)
+         if (false && p_21016_.m_146705_() && !this.m_6844_(EquipmentSlot.HEAD).m_41619_()) {
             this.m_142642_(p_21016_, p_21017_);
             p_21017_ *= 0.75F;
          }
 
+         // CraftBukkit start
+         if (this instanceof Animal) {
+            ((Animal) this).m_27594_();
+            if (this instanceof TamableAnimal) {
+               ((TamableAnimal) this).m_21839_(false);
+            }
+         }
+         // CraftBukkit end
+
          this.f_20918_ = 0.0F;
          Entity entity1 = p_21016_.m_7639_();
          if (entity1 != null) {
@@ -1048,11 +_,11 @@
             if (entity1 instanceof Player) {
                this.f_20889_ = 100;
                this.f_20888_ = (Player)entity1;
-            } else if (entity1 instanceof Wolf) {
-               Wolf wolf = (Wolf)entity1;
-               if (wolf.m_21824_()) {
+            } else if (entity1 instanceof net.minecraft.world.entity.TamableAnimal) {
+               net.minecraft.world.entity.TamableAnimal tamableEntity = (net.minecraft.world.entity.TamableAnimal)entity1;
+               if (tamableEntity.m_21824_()) {
                   this.f_20889_ = 100;
-                  LivingEntity livingentity = wolf.m_142480_();
+                  LivingEntity livingentity = tamableEntity.m_142480_();
                   if (livingentity != null && livingentity.m_6095_() == EntityType.f_20532_) {
                      this.f_20888_ = (Player)livingentity;
                   } else {
@@ -1125,7 +_,7 @@
          if (this instanceof ServerPlayer) {
             CriteriaTriggers.f_10574_.m_35174_((ServerPlayer)this, p_21016_, f, p_21017_, flag);
             if (f1 > 0.0F && f1 < 3.4028235E37F) {
-               ((ServerPlayer)this).m_36222_(Stats.f_12932_, Math.round(f1 * 10.0F));
+               ((ServerPlayer)this).m_6278_(Stats.f_12988_.m_12902_(Stats.f_12932_), Math.round(f1 * 10.0F));
             }
          }
 
@@ -1151,31 +_,41 @@
       } else {
          ItemStack itemstack = null;
 
+         ItemStack itemstack1 = ItemStack.f_41583_;
          for(InteractionHand interactionhand : InteractionHand.values()) {
-            ItemStack itemstack1 = this.m_21120_(interactionhand);
+            itemstack1 = this.m_21120_(interactionhand);
             if (itemstack1.m_150930_(Items.f_42747_)) {
                itemstack = itemstack1.m_41777_();
+               // itemstack1.shrink(1); // CraftBukkit
+               break;
+            }
+         }
+
+         EntityResurrectEvent event = new EntityResurrectEvent((org.bukkit.entity.LivingEntity) this.getBukkitEntity());
+         event.setCancelled(itemstack == null);
+         this.f_19853_.getCraftServer().getPluginManager().callEvent(event);
+         if (!event.isCancelled()) {
+            if (!itemstack1.m_41619_()) {
                itemstack1.m_41774_(1);
-               break;
             }
-         }
-
-         if (itemstack != null) {
-            if (this instanceof ServerPlayer) {
+            if (itemstack != null && this instanceof ServerPlayer) {
+               // CraftBukkit end
                ServerPlayer serverplayer = (ServerPlayer)this;
-               serverplayer.m_36246_(Stats.f_12982_.m_12902_(Items.f_42747_));
+               serverplayer.m_6278_(Stats.f_12982_.m_12902_(Items.f_42747_), 1);
                CriteriaTriggers.f_10551_.m_74431_(serverplayer, itemstack);
             }
 
             this.m_21153_(1.0F);
-            this.m_21219_();
-            this.m_7292_(new MobEffectInstance(MobEffects.f_19605_, 900, 1));
-            this.m_7292_(new MobEffectInstance(MobEffects.f_19617_, 100, 1));
-            this.m_7292_(new MobEffectInstance(MobEffects.f_19607_, 800, 0));
+            // CraftBukkit start
+            this.removeAllEffects(org.bukkit.event.entity.EntityPotionEffectEvent.Cause.TOTEM);
+            this.addEffect(new MobEffectInstance(MobEffects.f_19605_, 900, 1), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.TOTEM);
+            this.addEffect(new MobEffectInstance(MobEffects.f_19617_, 100, 1), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.TOTEM);
+            this.addEffect(new MobEffectInstance(MobEffects.f_19607_, 800, 0), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.TOTEM);
+            // CraftBukkit end
             this.f_19853_.m_7605_(this, (byte)35);
          }
 
-         return itemstack != null;
+         return !event.isCancelled();
       }
    }
 
@@ -1233,6 +_,7 @@
    }
 
    public void m_6667_(DamageSource p_21014_) {
+      if (net.minecraftforge.common.ForgeHooks.onLivingDeath(this, p_21014_)) return;
       if (!this.m_146910_() && !this.f_20890_) {
          Entity entity = p_21014_.m_7639_();
          LivingEntity livingentity = this.m_21232_();
@@ -1245,7 +_,7 @@
          }
 
          if (!this.f_19853_.f_46443_ && this.m_8077_()) {
-            f_201943_.info("Named entity {} died: {}", this, this.m_21231_().m_19293_().getString());
+            if (org.spigotmc.SpigotConfig.logNamedDeaths) f_201943_.info("Named entity {} died: {}", this, this.m_21231_().m_19293_().getString()); // Spigot
          }
 
          this.f_20890_ = true;
@@ -1268,17 +_,25 @@
       if (!this.f_19853_.f_46443_) {
          boolean flag = false;
          if (p_21269_ instanceof WitherBoss) {
-            if (this.f_19853_.m_46469_().m_46207_(GameRules.f_46132_)) {
+            if (net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.f_19853_, p_21269_)) {
                BlockPos blockpos = this.m_142538_();
                BlockState blockstate = Blocks.f_50070_.m_49966_();
-               if (this.f_19853_.m_8055_(blockpos).m_60795_() && blockstate.m_60710_(this.f_19853_, blockpos)) {
-                  this.f_19853_.m_7731_(blockpos, blockstate, 3);
-                  flag = true;
+               if (this.f_19853_.m_46859_(blockpos) && blockstate.m_60710_(this.f_19853_, blockpos)) {
+                  // CraftBukkit start - call EntityBlockFormEvent for Wither Rose
+                  flag = org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.handleBlockFormEvent(this.f_19853_, blockpos, blockstate, 3, this);
+                  // CraftBukkit end
                }
             }
 
             if (!flag) {
                ItemEntity itementity = new ItemEntity(this.f_19853_, this.m_20185_(), this.m_20186_(), this.m_20189_(), new ItemStack(Items.f_41951_));
+               // CraftBukkit start
+               org.bukkit.event.entity.EntityDropItemEvent event = new org.bukkit.event.entity.EntityDropItemEvent(this.getBukkitEntity(), (org.bukkit.entity.Item) itementity.getBukkitEntity());
+               CraftEventFactory.callEvent(event);
+               if (event.isCancelled()) {
+                  return;
+               }
+               // CraftBukkit end
                this.f_19853_.m_7967_(itementity);
             }
          }
@@ -1288,31 +_,50 @@
 
    protected void m_6668_(DamageSource p_21192_) {
       Entity entity = p_21192_.m_7639_();
-      int i;
-      if (entity instanceof Player) {
-         i = EnchantmentHelper.m_44930_((LivingEntity)entity);
-      } else {
-         i = 0;
-      }
+
+      int i = net.minecraftforge.common.ForgeHooks.getLootingLevel(this, entity, p_21192_);
+      this.captureDrops(new java.util.ArrayList<>());
 
       boolean flag = this.f_20889_ > 0;
+      this.m_5907_(); // CraftBukkit - from below
       if (this.m_6125_() && this.f_19853_.m_46469_().m_46207_(GameRules.f_46135_)) {
          this.m_7625_(p_21192_, flag);
          this.m_7472_(p_21192_, i, flag);
       }
+      // CraftBukkit start - Call death event
+      CraftEventFactory.callEntityDeathEvent(this, this.drops);
+      this.drops = new ArrayList<>();
+      // CraftBukkit end
 
-      this.m_5907_();
+      // this.dropEquipment(); // CraftBukkit - moved up
       this.m_21226_();
+
+      Collection<ItemEntity> drops = captureDrops(null);
+      if (!net.minecraftforge.common.ForgeHooks.onLivingDrops(this, p_21192_, drops, i, f_20889_ > 0))
+         drops.forEach(e -> f_19853_.m_7967_(e));
    }
 
    protected void m_5907_() {
    }
 
-   protected void m_21226_() {
+   // CraftBukkit start
+   public int getExpReward() {
       if (this.f_19853_ instanceof ServerLevel && (this.m_6124_() || this.f_20889_ > 0 && this.m_6149_() && this.f_19853_.m_46469_().m_46207_(GameRules.f_46135_))) {
-         ExperienceOrb.m_147082_((ServerLevel)this.f_19853_, this.m_20182_(), this.m_6552_(this.f_20888_));
+         int i = net.minecraftforge.event.ForgeEventFactory.getExperienceDrop(this, this.f_20888_, this.m_6552_(this.f_20888_));
+         return i;
+      } else {
+         return 0;
       }
+   }
 
+   // CraftBukkit end
+   protected void m_21226_() {
+      // CraftBukkit start - Update getExpReward() above if the removed if() changes!
+      if (true) {
+         ExperienceOrb.m_147082_((ServerLevel) this.f_19853_, this.m_20182_(), this.expToDrop);
+         this.expToDrop = 0;
+      }
+      // CraftBukkit end
    }
 
    protected void m_7472_(DamageSource p_21018_, int p_21019_, boolean p_21020_) {
@@ -1326,7 +_,8 @@
       ResourceLocation resourcelocation = this.m_5743_();
       LootTable loottable = this.f_19853_.m_142572_().m_129898_().m_79217_(resourcelocation);
       LootContext.Builder lootcontext$builder = this.m_7771_(p_21022_, p_21021_);
-      loottable.m_79148_(lootcontext$builder.m_78975_(LootContextParamSets.f_81415_), this::m_19983_);
+      LootContext ctx = lootcontext$builder.m_78975_(LootContextParamSets.f_81415_);
+      loottable.m_79129_(ctx).forEach(this::m_19983_);
    }
 
    protected LootContext.Builder m_7771_(boolean p_21105_, DamageSource p_21106_) {
@@ -1339,6 +_,11 @@
    }
 
    public void m_147240_(double p_147241_, double p_147242_, double p_147243_) {
+      net.minecraftforge.event.entity.living.LivingKnockBackEvent event = net.minecraftforge.common.ForgeHooks.onLivingKnockBack(this, (float) p_147241_, p_147242_, p_147243_);
+      if(event.isCanceled()) return;
+      p_147241_ = event.getStrength();
+      p_147242_ = event.getRatioX();
+      p_147243_ = event.getRatioZ();
       p_147241_ *= 1.0D - this.m_21133_(Attributes.f_22278_);
       if (!(p_147241_ <= 0.0D)) {
          this.f_19812_ = true;
@@ -1392,15 +_,9 @@
       } else {
          BlockPos blockpos = this.m_142538_();
          BlockState blockstate = this.m_146900_();
-         if (blockstate.m_204336_(BlockTags.f_13082_)) {
-            this.f_20957_ = Optional.of(blockpos);
-            return true;
-         } else if (blockstate.m_60734_() instanceof TrapDoorBlock && this.m_21176_(blockpos, blockstate)) {
-            this.f_20957_ = Optional.of(blockpos);
-            return true;
-         } else {
-            return false;
-         }
+         Optional<BlockPos> ladderPos = net.minecraftforge.common.ForgeHooks.isLivingOnLadder(blockstate, f_19853_, blockpos, this);
+         if (ladderPos.isPresent()) this.f_20957_ = ladderPos;
+         return ladderPos.isPresent();
       }
    }
 
@@ -1420,12 +_,22 @@
    }
 
    public boolean m_142535_(float p_147187_, float p_147188_, DamageSource p_147189_) {
+      float[] ret = net.minecraftforge.common.ForgeHooks.onLivingFall(this, p_147187_, p_147188_);
+      if (ret == null) return false;
+      p_147187_ = ret[0];
+      p_147188_ = ret[1];
+
       boolean flag = super.m_142535_(p_147187_, p_147188_, p_147189_);
       int i = this.m_5639_(p_147187_, p_147188_);
       if (i > 0) {
+         // CraftBukkit start
+         if (!this.m_6469_(p_147189_, (float) i)) {
+            return true;
+         }
+         // CraftBukkit end
          this.m_5496_(this.m_5896_(i), 1.0F, 1.0F);
          this.m_21229_();
-         this.m_6469_(p_147189_, (float)i);
+         // this.hurt(p_147189_, (float)i); // CraftBukkit - moved up
          return true;
       } else {
          return flag;
@@ -1443,9 +_,10 @@
          int i = Mth.m_14107_(this.m_20185_());
          int j = Mth.m_14107_(this.m_20186_() - (double)0.2F);
          int k = Mth.m_14107_(this.m_20189_());
-         BlockState blockstate = this.f_19853_.m_8055_(new BlockPos(i, j, k));
+         BlockPos pos = new BlockPos(i, j, k);
+         BlockState blockstate = this.f_19853_.m_8055_(pos);
          if (!blockstate.m_60795_()) {
-            SoundType soundtype = blockstate.m_60827_();
+            SoundType soundtype = blockstate.getSoundType(f_19853_, pos, this);
             this.m_5496_(soundtype.m_56779_(), soundtype.m_56773_() * 0.5F, soundtype.m_56774_() * 0.75F);
          }
 
@@ -1473,7 +_,7 @@
 
    protected float m_21161_(DamageSource p_21162_, float p_21163_) {
       if (!p_21162_.m_19376_()) {
-         this.m_6472_(p_21162_, p_21163_);
+         // this.hurtArmor(p_21162_, p_21163_); // CraftBukkit - Moved into damageEntity0(DamageSource, float)
          p_21163_ = CombatRules.m_19272_(p_21163_, (float)this.m_21230_(), (float)this.m_21133_(Attributes.f_22285_));
       }
 
@@ -1484,7 +_,8 @@
       if (p_21193_.m_19379_()) {
          return p_21194_;
       } else {
-         if (this.m_21023_(MobEffects.f_19606_) && p_21193_ != DamageSource.f_19317_) {
+         // CraftBukkit - Moved to damageEntity0(DamageSource, float)
+         if (false && this.m_21023_(MobEffects.f_19606_) && p_21193_ != DamageSource.f_19317_) {
             int i = (this.m_21124_(MobEffects.f_19606_).m_19564_() + 1) * 5;
             int j = 25 - i;
             float f = p_21194_ * (float)j;
@@ -1493,9 +_,9 @@
             float f2 = f1 - p_21194_;
             if (f2 > 0.0F && f2 < 3.4028235E37F) {
                if (this instanceof ServerPlayer) {
-                  ((ServerPlayer)this).m_36222_(Stats.f_12934_, Math.round(f2 * 10.0F));
+                  ((ServerPlayer)this).m_6278_(Stats.f_12988_.m_12902_(Stats.f_12934_), Math.round(f2 * 10.0F));
                } else if (p_21193_.m_7639_() instanceof ServerPlayer) {
-                  ((ServerPlayer)p_21193_.m_7639_()).m_36222_(Stats.f_12930_, Math.round(f2 * 10.0F));
+                  ((ServerPlayer)p_21193_.m_7639_()).m_6278_(Stats.f_12988_.m_12902_(Stats.f_12930_), Math.round(f2 * 10.0F));
                }
             }
          }
@@ -1514,26 +_,194 @@
    }
 
    protected void m_6475_(DamageSource p_21240_, float p_21241_) {
+      if (true) {
+         this.damageEntity0(p_21240_, p_21241_);
+         return;
+      }
       if (!this.m_6673_(p_21240_)) {
+         p_21241_ = net.minecraftforge.common.ForgeHooks.onLivingHurt(this, p_21240_, p_21241_);
+         if (p_21241_ <= 0) return;
          p_21241_ = this.m_21161_(p_21240_, p_21241_);
          p_21241_ = this.m_6515_(p_21240_, p_21241_);
          float f2 = Math.max(p_21241_ - this.m_6103_(), 0.0F);
          this.m_7911_(this.m_6103_() - (p_21241_ - f2));
          float f = p_21241_ - f2;
          if (f > 0.0F && f < 3.4028235E37F && p_21240_.m_7639_() instanceof ServerPlayer) {
-            ((ServerPlayer)p_21240_.m_7639_()).m_36222_(Stats.f_12929_, Math.round(f * 10.0F));
+            ((ServerPlayer)p_21240_.m_7639_()).m_6278_(Stats.f_12988_.m_12902_(Stats.f_12929_), Math.round(f * 10.0F));
          }
 
+         f2 = net.minecraftforge.common.ForgeHooks.onLivingDamage(this, p_21240_, f2);
          if (f2 != 0.0F) {
             float f1 = this.m_21223_();
-            this.m_21153_(f1 - f2);
             this.m_21231_().m_19289_(p_21240_, f1, f2);
+            this.m_21153_(f1 - f2); // Forge: moved to fix MC-121048
             this.m_7911_(this.m_6103_() - f2);
             this.m_146852_(GameEvent.f_157808_, p_21240_.m_7639_());
          }
       }
    }
 
+   protected boolean damageEntity0(DamageSource damagesource, float f) {
+      if (!this.m_6673_(damagesource)) {
+         final boolean human = this instanceof net.minecraft.world.entity.player.Player;
+
+         f = net.minecraftforge.common.ForgeHooks.onLivingHurt(this, damagesource, f);
+         if (f <= 0) return true;
+
+         float originalDamage = f;
+         Function<Double, Double> hardHat = f12 -> {
+            if ((damagesource == DamageSource.f_19321_ || damagesource == DamageSource.f_19322_) && !this.m_6844_(EquipmentSlot.HEAD).m_41619_()) {
+               return -(f12 - (f12 * 0.75F));
+            }
+            return -0.0;
+         };
+         float hardHatModifier = hardHat.apply((double) f).floatValue();
+         f += hardHatModifier;
+
+         Function<Double, Double> blocking;
+         var shieldTakesDamage = false;
+         if (this.m_21275_(damagesource)) {
+            var shieldEvent = ForgeHooks.onShieldBlock(this, damagesource, f);
+            if (!shieldEvent.isCanceled()) {
+               var blocked = shieldEvent.getBlockedDamage();
+               shieldTakesDamage = shieldEvent.shieldTakesDamage();
+               blocking = f13 -> -(double) blocked;
+            } else {
+               blocking = f13 -> 0d;
+            }
+         } else {
+            blocking = f13 -> 0d;
+         }
+         float blockingModifier = blocking.apply((double) f).floatValue();
+         f += blockingModifier;
+
+         Function<Double, Double> armor = f14 -> -(f14 - this.m_21161_(damagesource, f14.floatValue()));
+         float armorModifier = armor.apply((double) f).floatValue();
+         f += armorModifier;
+
+         Function<Double, Double> resistance = f15 -> {
+            if (!damagesource.m_19379_() && this.m_21023_(MobEffects.f_19606_) && damagesource != DamageSource.f_19317_) {
+               int i = (this.m_21124_(MobEffects.f_19606_).m_19564_() + 1) * 5;
+               int j = 25 - i;
+               float f1 = f15.floatValue() * (float) j;
+               return -(f15 - (f1 / 25.0F));
+            }
+            return -0.0;
+         };
+         float resistanceModifier = resistance.apply((double) f).floatValue();
+         f += resistanceModifier;
+
+         Function<Double, Double> magic = f16 -> -(f16 - this.m_6515_(damagesource, f16.floatValue()));
+         float magicModifier = magic.apply((double) f).floatValue();
+         f += magicModifier;
+
+         Function<Double, Double> absorption = f17 -> -(Math.max(f17 - Math.max(f17 - this.m_6103_(), 0.0F), 0.0F));
+         float absorptionModifier = absorption.apply((double) f).floatValue();
+
+         EntityDamageEvent event = CraftEventFactory.handleLivingEntityDamageEvent((LivingEntity) this, damagesource, originalDamage, hardHatModifier, blockingModifier, armorModifier, resistanceModifier, magicModifier, absorptionModifier, hardHat, blocking, armor, resistance, magic, absorption);
+         if (damagesource.m_7639_() instanceof net.minecraft.world.entity.player.Player) {
+            ((net.minecraft.world.entity.player.Player) damagesource.m_7639_()).m_36334_();
+         }
+
+         if (event.isCancelled()) {
+            return false;
+         }
+
+         f = (float) event.getFinalDamage();
+
+         // Resistance
+         if (event.getDamage(EntityDamageEvent.DamageModifier.RESISTANCE) < 0) {
+            float f3 = (float) -event.getDamage(EntityDamageEvent.DamageModifier.RESISTANCE);
+            if (f3 > 0.0F && f3 < 3.4028235E37F) {
+               if (this instanceof ServerPlayer) {
+                  ((ServerPlayer) this).m_36222_(Stats.f_12934_, Math.round(f3 * 10.0F));
+               } else if (damagesource.m_7639_() instanceof ServerPlayer) {
+                  ((ServerPlayer) damagesource.m_7639_()).m_36222_(Stats.f_12930_, Math.round(f3 * 10.0F));
+               }
+            }
+         }
+
+         // Apply damage to helmet
+         if (damagesource.m_146705_() && !this.m_6844_(EquipmentSlot.HEAD).m_41619_()) {
+            this.m_142642_(damagesource, f);
+         }
+
+         // Apply damage to armor
+         if (!damagesource.m_19376_()) {
+            float armorDamage = (float) (event.getDamage() + event.getDamage(EntityDamageEvent.DamageModifier.BLOCKING) + event.getDamage(EntityDamageEvent.DamageModifier.HARD_HAT));
+            this.m_6472_(damagesource, armorDamage);
+         }
+
+         // Apply blocking code // PAIL: steal from above
+         if (event.getDamage(EntityDamageEvent.DamageModifier.BLOCKING) < 0) {
+            this.f_19853_.m_7605_(this, (byte) 29); // SPIGOT-4635 - shield damage sound
+            if (shieldTakesDamage) {
+               this.m_7909_((float) -event.getDamage(EntityDamageEvent.DamageModifier.BLOCKING));
+            }
+            Entity entity = damagesource.m_7640_();
+
+            if (entity instanceof LivingEntity) {
+               this.m_6728_(((LivingEntity) entity));
+            }
+         }
+
+         absorptionModifier = (float) -event.getDamage(EntityDamageEvent.DamageModifier.ABSORPTION);
+         this.m_7911_(Math.max(this.m_6103_() - absorptionModifier, 0.0F));
+         float f2 = absorptionModifier;
+
+         if (f2 > 0.0F && f2 < 3.4028235E37F && this instanceof net.minecraft.world.entity.player.Player) {
+            ((net.minecraft.world.entity.player.Player) this).m_36222_(Stats.f_12933_, Math.round(f2 * 10.0F));
+         }
+         if (f2 > 0.0F && f2 < 3.4028235E37F && damagesource.m_7639_() instanceof net.minecraft.world.entity.player.Player) {
+            ((net.minecraft.world.entity.player.Player) damagesource.m_7639_()).m_36222_(Stats.f_12929_, Math.round(f2 * 10.0F));
+         }
+
+         f = net.minecraftforge.common.ForgeHooks.onLivingDamage(this, damagesource, f);
+
+         if (f > 0 || !human) {
+            if (human) {
+               // PAIL: Be sure to drag all this code from the EntityHuman subclass each update.
+               ((Player) this).causeFoodExhaustion(damagesource.m_19377_(), org.bukkit.event.entity.EntityExhaustionEvent.ExhaustionReason.DAMAGED); // CraftBukkit - EntityExhaustionEvent
+               if (f < 3.4028235E37F) {
+                  ((net.minecraft.world.entity.player.Player) this).m_36222_(Stats.f_12931_, Math.round(f * 10.0F));
+               }
+            }
+            // CraftBukkit end
+            float f3 = this.m_21223_();
+
+            this.m_21231_().m_19289_(damagesource, f3, f);
+            this.m_21153_(f3 - f); // Forge: moved to fix MC-121048
+            // CraftBukkit start
+            if (!human) {
+               this.m_7911_(this.m_6103_() - f);
+            }
+            this.m_146852_(GameEvent.f_157808_, damagesource.m_7639_());
+
+            return true;
+         } else {
+            // Duplicate triggers if blocking
+            if (event.getDamage(EntityDamageEvent.DamageModifier.BLOCKING) < 0) {
+               if ( this instanceof ServerPlayer) {
+                  CriteriaTriggers.f_10574_.m_35174_((ServerPlayer) this, damagesource, f, originalDamage, true);
+                  f2 = (float) (-event.getDamage(EntityDamageEvent.DamageModifier.BLOCKING));
+                  if (f2 > 0.0f && f2 < 3.4028235E37f) {
+                     ((ServerPlayer) this).m_36222_(Stats.f_12932_, Math.round(originalDamage * 10.0f));
+                  }
+               }
+               if (damagesource.m_7639_() instanceof ServerPlayer) {
+                  CriteriaTriggers.f_10573_.m_60112_((ServerPlayer) damagesource.m_7639_(), (Entity) this, damagesource, f, originalDamage, true);
+               }
+
+               return false;
+            } else {
+               return originalDamage > 0;
+            }
+            // CraftBukkit end
+         }
+      }
+      return false; // CraftBukkit
+   }
+
    public CombatTracker m_21231_() {
       return this.f_20944_;
    }
@@ -1557,9 +_,23 @@
       return this.f_19804_.m_135370_(f_20940_);
    }
 
+   // CatServer start
+   public final void setArrowCount(int p_21318_, boolean flag) {
+      ArrowBodyCountChangeEvent event = CraftEventFactory.callArrowBodyCountChangeEvent(this, m_21234_(), p_21318_, flag);
+      if (event.isCancelled()) {
+         return;
+      }
+      this.f_19804_.m_135381_(f_20940_, event.getNewAmount());
+   }
+
    public final void m_21317_(int p_21318_) {
-      this.f_19804_.m_135381_(f_20940_, p_21318_);
+      ArrowBodyCountChangeEvent event = CraftEventFactory.callArrowBodyCountChangeEvent(this, m_21234_(), p_21318_, false);
+      if (event.isCancelled()) {
+         return;
+      }
+      this.f_19804_.m_135381_(f_20940_, event.getNewAmount());
    }
+   // CatServer end
 
    public final int m_21235_() {
       return this.f_19804_.m_135370_(f_20941_);
@@ -1582,6 +_,8 @@
    }
 
    public void m_21011_(InteractionHand p_21012_, boolean p_21013_) {
+      ItemStack stack = this.m_21120_(p_21012_);
+      if (!stack.m_41619_() && stack.onEntitySwing(this)) return;
       if (!this.f_20911_ || this.f_20913_ >= this.m_21304_() / 2 || this.f_20913_ < 0) {
          this.f_20913_ = -1;
          this.f_20911_ = true;
@@ -1847,6 +_,12 @@
 
    public abstract ItemStack m_6844_(EquipmentSlot p_21127_);
 
+   // CraftBukkit start
+   public void setItemSlot(EquipmentSlot enumitemslot, ItemStack itemstack, boolean silent) {
+      this.m_8061_(enumitemslot, itemstack);
+   }
+   // CraftBukkit end
+
    public abstract void m_8061_(EquipmentSlot p_21036_, ItemStack p_21037_);
 
    protected void m_181122_(ItemStack p_181123_) {
@@ -1941,14 +_,15 @@
       }
 
       this.f_19812_ = true;
+      net.minecraftforge.common.ForgeHooks.onLivingJump(this);
    }
 
    protected void m_21208_() {
-      this.m_20256_(this.m_20184_().m_82520_(0.0D, (double)-0.04F, 0.0D));
+      this.m_20256_(this.m_20184_().m_82520_(0.0D, (double)-0.04F * this.m_21051_(net.minecraftforge.common.ForgeMod.SWIM_SPEED.get()).m_22135_(), 0.0D));
    }
 
    protected void m_203347_(TagKey<Fluid> p_204043_) {
-      this.m_20256_(this.m_20184_().m_82520_(0.0D, (double)0.04F, 0.0D));
+      this.m_20256_(this.m_20184_().m_82520_(0.0D, (double)0.04F * this.m_21051_(net.minecraftforge.common.ForgeMod.SWIM_SPEED.get()).m_22135_(), 0.0D));
    }
 
    protected float m_6108_() {
@@ -1962,11 +_,15 @@
    public void m_7023_(Vec3 p_21280_) {
       if (this.m_6142_() || this.m_6109_()) {
          double d0 = 0.08D;
+         AttributeInstance gravity = this.m_21051_(net.minecraftforge.common.ForgeMod.ENTITY_GRAVITY.get());
          boolean flag = this.m_20184_().f_82480_ <= 0.0D;
          if (flag && this.m_21023_(MobEffects.f_19591_)) {
-            d0 = 0.01D;
+            if (!gravity.m_22109_(SLOW_FALLING)) gravity.m_22118_(SLOW_FALLING);
             this.m_183634_();
+         } else if (gravity.m_22109_(SLOW_FALLING)) {
+            gravity.m_22130_(SLOW_FALLING);
          }
+         d0 = gravity.m_22135_();
 
          FluidState fluidstate = this.f_19853_.m_6425_(this.m_142538_());
          if (this.m_20069_() && this.m_6129_() && !this.m_203441_(fluidstate)) {
@@ -1991,6 +_,7 @@
                f4 = 0.96F;
             }
 
+            f5 *= (float)this.m_21051_(net.minecraftforge.common.ForgeMod.SWIM_SPEED.get()).m_22135_();
             this.m_19920_(f5, p_21280_);
             this.m_6478_(MoverType.SELF, this.m_20184_());
             Vec3 vec36 = this.m_20184_();
@@ -2065,11 +_,12 @@
             }
 
             if (this.f_19861_ && !this.f_19853_.f_46443_) {
+               if (m_20291_(7) && !CraftEventFactory.callToggleGlideEvent(this, false).isCancelled()) // CraftBukkit
                this.m_20115_(7, false);
             }
          } else {
             BlockPos blockpos = this.m_20099_();
-            float f2 = this.f_19853_.m_8055_(blockpos).m_60734_().m_49958_();
+            float f2 = this.f_19853_.m_8055_(this.m_20099_()).getFriction(f_19853_, this.m_20099_(), this);
             float f3 = this.f_19861_ ? f2 * 0.91F : 0.91F;
             Vec3 vec35 = this.m_21074_(p_21280_, f2);
             double d2 = vec35.f_82480_;
@@ -2145,7 +_,7 @@
          double d0 = Mth.m_14008_(p_21298_.f_82479_, (double)-0.15F, (double)0.15F);
          double d1 = Mth.m_14008_(p_21298_.f_82481_, (double)-0.15F, (double)0.15F);
          double d2 = Math.max(p_21298_.f_82480_, (double)-0.15F);
-         if (d2 < 0.0D && !this.m_146900_().m_60713_(Blocks.f_50616_) && this.m_5791_() && this instanceof Player) {
+         if (d2 < 0.0D && !this.m_146900_().isScaffolding(this) && this.m_5791_() && this instanceof Player) {
             d2 = 0.0D;
          }
 
@@ -2173,6 +_,8 @@
    }
 
    public void m_8119_() {
+      if (net.minecraftforge.common.ForgeHooks.onLivingUpdate(this)) return;
+      SpigotTimings.timerEntityBaseTick.startTiming(); // Spigot
       super.m_8119_();
       this.m_21329_();
       this.m_21333_();
@@ -2211,7 +_,9 @@
          }
       }
 
+      SpigotTimings.timerEntityBaseTick.stopTiming(); // Spigot
       this.m_8107_();
+      SpigotTimings.timerEntityTickRest.startTiming(); // Spigot
       double d1 = this.m_20185_() - this.f_19854_;
       double d0 = this.m_20189_() - this.f_19856_;
       float f = (float)(d1 * d1 + d0 * d0);
@@ -2289,9 +_,10 @@
          this.m_146926_(0.0F);
       }
 
+      SpigotTimings.timerEntityTickRest.stopTiming(); // Spigot
    }
 
-   private void m_21315_() {
+   public void m_21315_() {
       Map<EquipmentSlot, ItemStack> map = this.m_21319_();
       if (map != null) {
          this.m_21091_(map);
@@ -2321,6 +_,7 @@
 
          ItemStack itemstack1 = this.m_6844_(equipmentslot);
          if (!ItemStack.m_41728_(itemstack1, itemstack)) {
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.LivingEquipmentChangeEvent(this, equipmentslot, itemstack, itemstack1));
             if (map == null) {
                map = Maps.newEnumMap(EquipmentSlot.class);
             }
@@ -2457,6 +_,7 @@
 
       this.m_20334_(d1, d3, d5);
       this.f_19853_.m_46473_().m_6180_("ai");
+      SpigotTimings.timerEntityAI.startTiming(); // Spigot
       if (this.m_6107_()) {
          this.f_20899_ = false;
          this.f_20900_ = 0.0F;
@@ -2466,6 +_,7 @@
          this.m_6140_();
          this.f_19853_.m_46473_().m_7238_();
       }
+      SpigotTimings.timerEntityAI.stopTiming(); // Spigot
 
       this.f_19853_.m_46473_().m_7238_();
       this.f_19853_.m_46473_().m_6180_("jump");
@@ -2501,7 +_,9 @@
       this.f_20902_ *= 0.98F;
       this.m_21323_();
       AABB aabb = this.m_142469_();
+      SpigotTimings.timerEntityAIMove.startTiming(); // Spigot
       this.m_7023_(new Vec3((double)this.f_20900_, (double)this.f_20901_, (double)this.f_20902_));
+      SpigotTimings.timerEntityAIMove.stopTiming(); // Spigot
       this.f_19853_.m_46473_().m_7238_();
       this.f_19853_.m_46473_().m_6180_("freezing");
       boolean flag = this.m_6095_().m_204039_(EntityTypeTags.f_144295_);
@@ -2528,7 +_,9 @@
          this.m_21071_(aabb, this.m_142469_());
       }
 
+      SpigotTimings.timerEntityAICollision.startTiming(); // Spigot
       this.m_6138_();
+      SpigotTimings.timerEntityAICollision.stopTiming(); // Spigot
       this.f_19853_.m_46473_().m_7238_();
       if (!this.f_19853_.f_46443_ && this.m_6126_() && this.m_20071_()) {
          this.m_6469_(DamageSource.f_19312_, 1.0F);
@@ -2544,6 +_,8 @@
       boolean flag = this.m_20291_(7);
       if (flag && !this.f_19861_ && !this.m_20159_() && !this.m_21023_(MobEffects.f_19620_)) {
          ItemStack itemstack = this.m_6844_(EquipmentSlot.CHEST);
+         flag = itemstack.canElytraFly(this) && itemstack.elytraFlightTick(this, this.f_20937_);
+         if (false) //Forge: Moved to ElytraItem
          if (itemstack.m_150930_(Items.f_42741_) && ElytraItem.m_41140_(itemstack)) {
             flag = true;
             int i = this.f_20937_ + 1;
@@ -2565,6 +_,7 @@
       }
 
       if (!this.f_19853_.f_46443_) {
+         if (flag != this.m_20291_(7) && !CraftEventFactory.callToggleGlideEvent(this, flag).isCancelled()) // CraftBukkit
          this.m_20115_(7, flag);
       }
 
@@ -2714,12 +_,19 @@
    }
 
    public boolean m_6087_() {
-      return !this.m_146910_();
+      return !this.m_146910_() && this.collides; // CraftBukkit
    }
 
    public boolean m_6094_() {
-      return this.m_6084_() && !this.m_5833_() && !this.m_6147_();
-   }
+      return this.m_6084_() && !this.m_5833_() && !this.m_6147_() && this.collides; // CraftBukkit
+   }
+
+   // CraftBukkit start - collidable API
+   @Override
+   public boolean canCollideWithBukkit(Entity entity) {
+      return m_6094_() && this.collides != this.collidableExemptions.contains(entity.m_142081_());
+   }
+   // CraftBukkit end
 
    public float m_6080_() {
       return this.f_20885_;
@@ -2775,8 +_,16 @@
 
    private void m_21329_() {
       if (this.m_6117_()) {
-         if (ItemStack.m_41758_(this.m_21120_(this.m_7655_()), this.f_20935_)) {
-            this.f_20935_ = this.m_21120_(this.m_7655_());
+         ItemStack itemStack = this.m_21120_(this.m_7655_());
+         if (net.minecraftforge.common.ForgeHooks.canContinueUsing(this.f_20935_, itemStack)) this.f_20935_ = itemStack;
+         if (itemStack == this.f_20935_) {
+
+            if (!this.f_20935_.m_41619_()) {
+              f_20936_ = net.minecraftforge.event.ForgeEventFactory.onItemUseTick(this, f_20935_, f_20936_);
+              if (f_20936_ > 0)
+                 f_20935_.onUsingTick(this, f_20936_);
+            }
+
             this.m_142106_(this.f_20935_);
          } else {
             this.m_5810_();
@@ -2799,7 +_,7 @@
 
    private boolean m_21332_() {
       int i = this.m_21212_();
-      FoodProperties foodproperties = this.f_20935_.m_41720_().m_41473_();
+      FoodProperties foodproperties = this.f_20935_.getFoodProperties(this);
       boolean flag = foodproperties != null && foodproperties.m_38748_();
       flag |= i <= this.f_20935_.m_41779_() - 7;
       return flag && i % 4 == 0;
@@ -2829,8 +_,10 @@
    public void m_6672_(InteractionHand p_21159_) {
       ItemStack itemstack = this.m_21120_(p_21159_);
       if (!itemstack.m_41619_() && !this.m_6117_()) {
+         int duration = net.minecraftforge.event.ForgeEventFactory.onItemUseStart(this, itemstack, itemstack.m_41779_());
+         if (duration <= 0) return;
          this.f_20935_ = itemstack;
-         this.f_20936_ = itemstack.m_41779_();
+         this.f_20936_ = duration;
          if (!this.f_19853_.f_46443_) {
             this.m_21155_(1, true);
             this.m_21155_(2, p_21159_ == InteractionHand.OFF_HAND);
@@ -2890,6 +_,9 @@
          vec31 = vec31.m_82496_(-this.m_146909_() * ((float)Math.PI / 180F));
          vec31 = vec31.m_82524_(-this.m_146908_() * ((float)Math.PI / 180F));
          vec31 = vec31.m_82520_(this.m_20185_(), this.m_20188_(), this.m_20189_());
+         if (this.f_19853_ instanceof ServerLevel) //Forge: Fix MC-2518 spawnParticle is nooped on server, need to use server specific variant
+             ((ServerLevel)this.f_19853_).m_8767_(new ItemParticleOption(ParticleTypes.f_123752_, p_21061_), vec31.f_82479_, vec31.f_82480_, vec31.f_82481_, 1, vec3.f_82479_, vec3.f_82480_ + 0.05D, vec3.f_82481_, 0.0D);
+         else
          this.f_19853_.m_7106_(new ItemParticleOption(ParticleTypes.f_123752_, p_21061_), vec31.f_82479_, vec31.f_82480_, vec31.f_82481_, vec3.f_82479_, vec3.f_82480_ + 0.05D, vec3.f_82481_);
       }
 
@@ -2903,7 +_,27 @@
          } else {
             if (!this.f_20935_.m_41619_() && this.m_6117_()) {
                this.m_21137_(this.f_20935_, 16);
-               ItemStack itemstack = this.f_20935_.m_41671_(this.f_19853_, this);
+               ItemStack copy = this.f_20935_.m_41777_();
+               ItemStack stack = net.minecraftforge.event.ForgeEventFactory.onItemUseFinish(this, copy, m_21212_(), this.f_20935_.m_41671_(this.f_19853_, this));
+
+               // CraftBukkit start - fire PlayerItemConsumeEvent
+               ItemStack itemstack;
+               if (this instanceof ServerPlayer) {
+                  org.bukkit.inventory.ItemStack craftItem = CraftItemStack.asBukkitCopy(this.f_20935_);
+                  PlayerItemConsumeEvent event = new PlayerItemConsumeEvent((org.bukkit.entity.Player) this.getBukkitEntity(), craftItem);
+                  f_19853_.getCraftServer().getPluginManager().callEvent(event);
+                  if (event.isCancelled()) {
+                     // Update client
+                     ((ServerPlayer) this).getBukkitEntity().updateInventory();
+                     ((ServerPlayer) this).getBukkitEntity().updateScaledHealth();
+                     return;
+                  }
+                  itemstack = (craftItem.equals(event.getItem())) ? stack : CraftItemStack.asNMSCopy(event.getItem()).m_41671_(f_19853_, this);
+               } else {
+                  itemstack = this.f_20935_.m_41671_(this.f_19853_, this);
+               }
+               // CraftBukkit end
+
                if (itemstack != this.f_20935_) {
                   this.m_21008_(interactionhand, itemstack);
                }
@@ -2929,7 +_,11 @@
 
    public void m_21253_() {
       if (!this.f_20935_.m_41619_()) {
+         if (!net.minecraftforge.event.ForgeEventFactory.onUseItemStop(this, f_20935_, this.m_21212_())) {
+            ItemStack copy = this instanceof Player ? f_20935_.m_41777_() : null;
          this.f_20935_.m_41674_(this.f_19853_, this, this.m_21212_());
+           if (copy != null && f_20935_.m_41619_()) net.minecraftforge.event.ForgeEventFactory.onPlayerDestroyItem((Player)this, copy, m_7655_());
+         }
          if (this.f_20935_.m_41781_()) {
             this.m_21329_();
          }
@@ -2976,6 +_,18 @@
       return this.f_20937_;
    }
 
+   // CatServer start
+   public Optional<Boolean> randomTeleport(double p_20985_, double p_20986_, double p_20987_, boolean p_20988_, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
+      CatServerCaptures.getCatServerCaptures().captureTeleportCause(cause);
+      try {
+         return Optional.of(this.m_20984_(p_20985_, p_20986_, p_20987_, p_20988_));
+      } finally {
+         // CatServer - Make sure reset
+         CatServerCaptures.getCatServerCaptures().getCaptureTeleportCause();
+      }
+   }
+   // CatServer end
+
    public boolean m_20984_(double p_20985_, double p_20986_, double p_20987_, boolean p_20988_) {
       double d0 = this.m_20185_();
       double d1 = this.m_20186_();
@@ -2998,16 +_,40 @@
             }
          }
 
-         if (flag1) {
-            this.m_6021_(p_20985_, d3, p_20987_);
+         if (flag) {
+            var cause = CatServerCaptures.getCatServerCaptures().getCaptureTeleportCause();
+            // CraftBukkit start - Teleport event
+            // this.teleportTo(p_20985_, d3, p_20987_);
+            // first set position, to check if the place to teleport is valid
+            this.m_6034_(p_20985_, d3, p_20987_);
             if (level.m_45786_(this) && !level.m_46855_(this.m_142469_())) {
                flag = true;
             }
+            // now revert and call event if the teleport place is valid
+            this.m_6034_(d0, d1, d2);
+            if (flag1) {
+               if (!(this instanceof ServerPlayer)) {
+                  EntityTeleportEvent teleport = new EntityTeleportEvent(this.getBukkitEntity(), new Location(this.f_19853_.getWorld(), d0, d1, d2), new Location(this.f_19853_.getWorld(), p_20985_, d3, p_20987_));
+                  this.f_19853_.getCraftServer().getPluginManager().callEvent(teleport);
+                  if (!teleport.isCancelled()) {
+                     Location to = teleport.getTo();
+                     this.m_6021_(to.getX(), to.getY(), to.getZ());
+                  } else {
+                     return false;
+                  }
+               } else {
+                  // player teleport event is called in the underlining code
+                  if (((ServerPlayer) this).f_8906_.teleport(p_20985_, d3, p_20987_, this.m_146908_(), this.m_146909_(), java.util.Collections.emptySet(), false, cause)) {
+                     return false;
+                  }
+               }
+            }
+            // CraftBukkit end
          }
       }
 
       if (!flag) {
-         this.m_6021_(d0, d1, d2);
+         // this.teleportTo(d0, d1, d2); // CraftBukkit - already set the location back
          return false;
       } else {
          if (p_20988_) {
@@ -3076,8 +_,8 @@
       }
 
       BlockState blockstate = this.f_19853_.m_8055_(p_21141_);
-      if (blockstate.m_60734_() instanceof BedBlock) {
-         this.f_19853_.m_7731_(p_21141_, blockstate.m_61124_(BedBlock.f_49441_, Boolean.valueOf(true)), 3);
+      if (blockstate.isBed(f_19853_, p_21141_, this)) {
+         blockstate.setBedOccupied(f_19853_, p_21141_, this, true);
       }
 
       this.m_20124_(Pose.SLEEPING);
@@ -3093,15 +_,15 @@
 
    private boolean m_21334_() {
       return this.m_21257_().map((p_147236_) -> {
-         return this.f_19853_.m_8055_(p_147236_).m_60734_() instanceof BedBlock;
+         return net.minecraftforge.event.ForgeEventFactory.fireSleepingLocationCheck(this, p_147236_);
       }).orElse(false);
    }
 
    public void m_5796_() {
       this.m_21257_().filter(this.f_19853_::m_46805_).ifPresent((p_147228_) -> {
          BlockState blockstate = this.f_19853_.m_8055_(p_147228_);
-         if (blockstate.m_60734_() instanceof BedBlock) {
-            this.f_19853_.m_7731_(p_147228_, blockstate.m_61124_(BedBlock.f_49441_, Boolean.valueOf(false)), 3);
+         if (blockstate.isBed(f_19853_, p_147228_, this)) {
+            blockstate.setBedOccupied(f_19853_, p_147228_, this, false);
             Vec3 vec31 = BedBlock.m_49458_(this.m_6095_(), this.f_19853_, p_147228_, this.m_146908_()).orElseGet(() -> {
                BlockPos blockpos = p_147228_.m_7494_();
                return new Vec3((double)blockpos.m_123341_() + 0.5D, (double)blockpos.m_123342_() + 0.1D, (double)blockpos.m_123343_() + 0.5D);
@@ -3123,7 +_,9 @@
    @Nullable
    public Direction m_21259_() {
       BlockPos blockpos = this.m_21257_().orElse((BlockPos)null);
-      return blockpos != null ? BedBlock.m_49485_(this.f_19853_, blockpos) : null;
+      if (blockpos == null) return Direction.UP;
+      BlockState state = this.f_19853_.m_8055_(blockpos);
+      return !state.isBed(f_19853_, blockpos, this) ? Direction.UP : state.getBedDirection(f_19853_, blockpos);
    }
 
    public boolean m_5830_() {
@@ -3139,7 +_,7 @@
    }
 
    public ItemStack m_6298_(ItemStack p_21272_) {
-      return ItemStack.f_41583_;
+      return net.minecraftforge.common.ForgeHooks.getProjectile(this, p_21272_, ItemStack.f_41583_);
    }
 
    public ItemStack m_5584_(Level p_21067_, ItemStack p_21068_) {
@@ -3160,9 +_,9 @@
    private void m_21063_(ItemStack p_21064_, Level p_21065_, LivingEntity p_21066_) {
       Item item = p_21064_.m_41720_();
       if (item.m_41472_()) {
-         for(Pair<MobEffectInstance, Float> pair : item.m_41473_().m_38749_()) {
+         for(Pair<MobEffectInstance, Float> pair : p_21064_.getFoodProperties(this).m_38749_()) {
             if (!p_21065_.f_46443_ && pair.getFirst() != null && p_21065_.f_46441_.nextFloat() < pair.getSecond()) {
-               p_21066_.m_7292_(new MobEffectInstance(pair.getFirst()));
+               p_21066_.addEffect(new MobEffectInstance(pair.getFirst()), EntityPotionEffectEvent.Cause.FOOD); // CraftBukkit
             }
          }
       }
@@ -3196,6 +_,64 @@
       this.m_21166_(p_21191_ == InteractionHand.MAIN_HAND ? EquipmentSlot.MAINHAND : EquipmentSlot.OFFHAND);
    }
 
+   /* ==== FORGE START ==== */
+   /***
+    * Removes all potion effects that have curativeItem as a curative item for its effect
+    * @param curativeItem The itemstack we are using to cure potion effects
+    */
+   public boolean curePotionEffects(ItemStack curativeItem) {
+      if (this.f_19853_.f_46443_)
+         return false;
+      boolean ret = false;
+      Iterator<MobEffectInstance> itr = this.f_20945_.values().iterator();
+      while (itr.hasNext()) {
+         MobEffectInstance effect = itr.next();
+         if (effect.isCurativeItem(curativeItem) && !net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.PotionEvent.PotionRemoveEvent(this, effect))) {
+            this.m_7285_(effect);
+            itr.remove();
+            ret = true;
+            this.f_20948_ = true;
+         }
+      }
+      return ret;
+   }
+
+   /**
+    * Returns true if the entity's rider (EntityPlayer) should face forward when mounted.
+    * currently only used in vanilla code by pigs.
+    *
+    * @param player The player who is riding the entity.
+    * @return If the player should orient the same direction as this entity.
+    */
+   public boolean shouldRiderFaceForward(Player player) {
+      return this instanceof net.minecraft.world.entity.animal.Pig;
+   }
+
+   private net.minecraftforge.common.util.LazyOptional<?>[] handlers = net.minecraftforge.items.wrapper.EntityEquipmentInvWrapper.create(this);
+
+   @Override
+   public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable Direction facing) {
+      if (this.m_6084_() && capability == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY) {
+         if (facing == null) return handlers[2].cast();
+         else if (facing.m_122434_().m_122478_()) return handlers[0].cast();
+         else if (facing.m_122434_().m_122479_()) return handlers[1].cast();
+      }
+      return super.getCapability(capability, facing);
+   }
+
+   @Override
+   public void invalidateCaps() {
+      super.invalidateCaps();
+      for (int x = 0; x < handlers.length; x++)
+         handlers[x].invalidate();
+   }
+
+   @Override
+   public void reviveCaps() {
+      super.reviveCaps();
+      handlers = net.minecraftforge.items.wrapper.EntityEquipmentInvWrapper.create(this);
+   }
+
    public AABB m_6921_() {
       if (this.m_6844_(EquipmentSlot.HEAD).m_150930_(Items.f_42683_)) {
          float f = 0.5F;
@@ -3206,6 +_,8 @@
    }
 
    public static EquipmentSlot m_147233_(ItemStack p_147234_) {
+      final EquipmentSlot slot = p_147234_.getEquipmentSlot();
+      if (slot != null) return slot; // FORGE: Allow modders to set a non-default equipment slot for a stack; e.g. a non-armor chestplate-slot item
       Item item = p_147234_.m_41720_();
       if (!p_147234_.m_150930_(Items.f_42047_) && (!(item instanceof BlockItem) || !(((BlockItem)item).m_40614_() instanceof AbstractSkullBlock))) {
          if (item instanceof ArmorItem) {
@@ -3213,7 +_,7 @@
          } else if (p_147234_.m_150930_(Items.f_42741_)) {
             return EquipmentSlot.CHEST;
          } else {
-            return p_147234_.m_150930_(Items.f_42740_) ? EquipmentSlot.OFFHAND : EquipmentSlot.MAINHAND;
+            return p_147234_.canPerformAction(net.minecraftforge.common.ToolActions.SHIELD_BLOCK) ? EquipmentSlot.OFFHAND : EquipmentSlot.MAINHAND;
          }
       } else {
          return EquipmentSlot.HEAD;
