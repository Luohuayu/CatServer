--- a/net/minecraft/entity/player/ServerPlayerEntity.java
+++ b/net/minecraft/entity/player/ServerPlayerEntity.java
@@ -3,18 +_,18 @@
 import com.google.common.collect.Lists;
 import com.mojang.authlib.GameProfile;
 import com.mojang.datafixers.util.Either;
-import java.util.Collection;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Optional;
-import java.util.OptionalInt;
-import java.util.Random;
-import java.util.UUID;
+
+import java.lang.reflect.Array;
+import java.util.*;
 import javax.annotation.Nullable;
+
+import io.papermc.paper.event.packet.PlayerChunkLoadEvent;
+import io.papermc.paper.event.packet.PlayerChunkUnloadEvent;
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.advancements.PlayerAdvancements;
 import net.minecraft.block.BlockState;
 import net.minecraft.block.Blocks;
+import net.minecraft.block.ChestBlock.DoubleInventory;
 import net.minecraft.block.HorizontalBlock;
 import net.minecraft.block.NetherPortalBlock;
 import net.minecraft.block.PortalInfo;
@@ -22,6 +_,7 @@
 import net.minecraft.crash.CrashReport;
 import net.minecraft.crash.CrashReportCategory;
 import net.minecraft.crash.ReportedException;
+import net.minecraft.enchantment.EnchantmentHelper;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.IAngerable;
 import net.minecraft.entity.LivingEntity;
@@ -49,41 +_,13 @@
 import net.minecraft.network.IPacket;
 import net.minecraft.network.play.ServerPlayNetHandler;
 import net.minecraft.network.play.client.CClientSettingsPacket;
-import net.minecraft.network.play.server.SAnimateHandPacket;
-import net.minecraft.network.play.server.SCameraPacket;
-import net.minecraft.network.play.server.SChangeGameStatePacket;
-import net.minecraft.network.play.server.SChatPacket;
-import net.minecraft.network.play.server.SCloseWindowPacket;
-import net.minecraft.network.play.server.SCombatPacket;
-import net.minecraft.network.play.server.SDestroyEntitiesPacket;
-import net.minecraft.network.play.server.SEntityStatusPacket;
-import net.minecraft.network.play.server.SMerchantOffersPacket;
-import net.minecraft.network.play.server.SOpenBookWindowPacket;
-import net.minecraft.network.play.server.SOpenHorseWindowPacket;
-import net.minecraft.network.play.server.SOpenSignMenuPacket;
-import net.minecraft.network.play.server.SOpenWindowPacket;
-import net.minecraft.network.play.server.SPlayEntityEffectPacket;
-import net.minecraft.network.play.server.SPlaySoundEffectPacket;
-import net.minecraft.network.play.server.SPlaySoundEventPacket;
-import net.minecraft.network.play.server.SPlayerAbilitiesPacket;
-import net.minecraft.network.play.server.SPlayerLookPacket;
-import net.minecraft.network.play.server.SRemoveEntityEffectPacket;
-import net.minecraft.network.play.server.SRespawnPacket;
-import net.minecraft.network.play.server.SSendResourcePackPacket;
-import net.minecraft.network.play.server.SServerDifficultyPacket;
-import net.minecraft.network.play.server.SSetExperiencePacket;
-import net.minecraft.network.play.server.SSetSlotPacket;
-import net.minecraft.network.play.server.SSpawnPlayerPacket;
-import net.minecraft.network.play.server.SUnloadChunkPacket;
-import net.minecraft.network.play.server.SUpdateHealthPacket;
-import net.minecraft.network.play.server.SUpdateTileEntityPacket;
-import net.minecraft.network.play.server.SWindowItemsPacket;
-import net.minecraft.network.play.server.SWindowPropertyPacket;
+import net.minecraft.network.play.server.*;
 import net.minecraft.potion.EffectInstance;
 import net.minecraft.potion.Effects;
 import net.minecraft.scoreboard.Score;
 import net.minecraft.scoreboard.ScoreCriteria;
 import net.minecraft.scoreboard.ScorePlayerTeam;
+import net.minecraft.scoreboard.Scoreboard;
 import net.minecraft.scoreboard.Team;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.management.PlayerInteractionManager;
@@ -94,10 +_,12 @@
 import net.minecraft.tileentity.CommandBlockTileEntity;
 import net.minecraft.tileentity.SignTileEntity;
 import net.minecraft.tileentity.TileEntity;
+import net.minecraft.util.CombatTracker;
 import net.minecraft.util.CooldownTracker;
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.Direction;
 import net.minecraft.util.EntityDamageSource;
+import net.minecraft.util.FoodStats;
 import net.minecraft.util.Hand;
 import net.minecraft.util.HandSide;
 import net.minecraft.util.NonNullList;
@@ -122,21 +_,42 @@
 import net.minecraft.util.text.TranslationTextComponent;
 import net.minecraft.util.text.event.HoverEvent;
 import net.minecraft.util.text.filter.IChatFilter;
+import net.minecraft.world.DimensionType;
 import net.minecraft.world.GameRules;
 import net.minecraft.world.GameType;
 import net.minecraft.world.World;
 import net.minecraft.world.biome.BiomeManager;
 import net.minecraft.world.server.ServerWorld;
 import net.minecraft.world.storage.IWorldInfo;
+import net.minecraftforge.event.ForgeEventFactory;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.WeatherType;
+import org.bukkit.craftbukkit.v1_16_R3.CraftWorld;
+import org.bukkit.craftbukkit.v1_16_R3.entity.CraftPlayer;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftPortalEvent;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.v1_16_R3.util.CraftChatMessage;
+import org.bukkit.event.entity.PlayerDeathEvent;
+import org.bukkit.event.inventory.InventoryType;
+import org.bukkit.event.player.PlayerBedLeaveEvent;
+import org.bukkit.event.player.PlayerChangedMainHandEvent;
+import org.bukkit.event.player.PlayerChangedWorldEvent;
+import org.bukkit.event.player.PlayerLocaleChangeEvent;
+import org.bukkit.event.player.PlayerPortalEvent;
+import org.bukkit.event.player.PlayerTeleportEvent;
+import org.bukkit.event.player.PlayerTeleportEvent.TeleportCause;
+import org.bukkit.inventory.MainHand;
 
 public class ServerPlayerEntity extends PlayerEntity implements IContainerListener {
    private static final Logger field_147102_bM = LogManager.getLogger();
    public ServerPlayNetHandler field_71135_a;
    public final MinecraftServer field_71133_b;
    public final PlayerInteractionManager field_71134_c;
-   private final List<Integer> field_71130_g = Lists.newLinkedList();
+   public final List<Integer> field_71130_g = Lists.newLinkedList();
    private final PlayerAdvancements field_192042_bX;
    private final ServerStatisticsManager field_147103_bO;
    private float field_130068_bO = Float.MIN_VALUE;
@@ -148,8 +_,8 @@
    private float field_71149_ch = -1.0E8F;
    private int field_71146_ci = -99999999;
    private boolean field_71147_cj = true;
-   private int field_71144_ck = -99999999;
-   private int field_147101_bU = 60;
+   public int field_71144_ck = -99999999;
+   public int field_147101_bU = 60;
    private ChatVisibility field_71143_cn;
    private boolean field_71140_co = true;
    private long field_143005_bX = Util.func_211177_b();
@@ -175,6 +_,22 @@
    public int field_71138_i;
    public boolean field_71136_j;
 
+   // CraftBukkit start
+   public String displayName;
+   public ITextComponent listName;
+   public org.bukkit.Location compassTarget;
+   public int newExp = 0;
+   public int newLevel = 0;
+   public int newTotalExp = 0;
+   public boolean keepLevel = false;
+   public double maxHealthCache;
+   public boolean joining = true;
+   public boolean sentListPacket = false;
+   public Integer clientViewDistance;
+   // CraftBukkit end
+   private boolean initialized = false;
+   public java.util.Collection<ItemEntity> capturedDeathDrops = new java.util.ArrayList<>(); // LoliServer
+
    public ServerPlayerEntity(MinecraftServer p_i45285_1_, ServerWorld p_i45285_2_, GameProfile p_i45285_3_, PlayerInteractionManager p_i45285_4_) {
       super(p_i45285_2_, p_i45285_2_.func_241135_u_(), p_i45285_2_.func_242107_v(), p_i45285_3_);
       p_i45285_4_.field_73090_b = this;
@@ -185,7 +_,45 @@
       this.field_70138_W = 1.0F;
       this.func_205734_a(p_i45285_2_);
       this.field_244528_co = p_i45285_1_.func_244435_a(this);
-   }
+
+      // CraftBukkit start
+      this.displayName = this.func_195047_I_();
+      this.canPickUpLoot = true;
+      this.maxHealthCache = this.func_110138_aP();
+      this.initialized = true;
+   }
+
+   // Yes, this doesn't match Vanilla, but it's the best we can do for now.
+   // If this is an issue, PRs are welcome
+   public final BlockPos getSpawnPoint(ServerWorld worldserver) {
+      final BlockPos blockposition = worldserver.func_241135_u_();
+      if (worldserver.func_230315_m_().func_218272_d() && worldserver.getServerWorldInfo().func_76077_q() != GameType.ADVENTURE) {
+         int i = Math.max(0, this.field_71133_b.func_184108_a(worldserver));
+         int j = MathHelper.func_76128_c(worldserver.func_175723_af().func_177729_b(blockposition.func_177958_n(), blockposition.func_177952_p()));
+         if (j < i) {
+            i = j;
+         }
+         if (j <= 1) {
+            i = 1;
+         }
+         long k = (long) (i * 2 + 1);
+         long l = k * k;
+         int i1 = (l > 2147483647L) ? Integer.MAX_VALUE : (int) l;
+         int j1 = this.func_205735_q(i1);
+         int k1 = new Random().nextInt(i1);
+         for (int l2 = 0; l2 < i1; ++l2) {
+            int i2 = (k1 + j1 * l2) % i1;
+            int j2 = i2 % (i * 2 + 1);
+            int k2 = i2 / (i * 2 + 1);
+            BlockPos blockposition1 = SpawnLocationHelper.func_241092_a_(worldserver, blockposition.func_177958_n() + j2 - i, blockposition.func_177952_p() + k2 - i, false);
+            if (blockposition1 != null) {
+               return blockposition1;
+            }
+         }
+      }
+      return blockposition;
+   }
+   // CraftBukkit end
 
    private void func_205734_a(ServerWorld p_205734_1_) {
       BlockPos blockpos = p_205734_1_.func_241135_u_();
@@ -234,6 +_,7 @@
 
    public void func_70037_a(CompoundNBT p_70037_1_) {
       super.func_70037_a(p_70037_1_);
+      if (this.func_226278_cu_() > 300) this.func_226288_n_(func_226277_ct_(), 257, func_226281_cx_()); // Paper - bring down to a saner Y level if out of world
       if (p_70037_1_.func_150297_b("playerGameType", 99)) {
          if (this.func_184102_h().func_104056_am()) {
             this.field_71134_c.func_241820_a(this.func_184102_h().func_71265_f(), GameType.NOT_SET);
@@ -251,11 +_,20 @@
       if (p_70037_1_.func_150297_b("recipeBook", 10)) {
          this.field_192041_cq.func_192825_a(p_70037_1_.func_74775_l("recipeBook"), this.field_71133_b.func_199529_aN());
       }
+      this.getBukkitEntity().readExtraData(p_70037_1_); // CraftBukkit
 
       if (this.func_70608_bn()) {
          this.func_213366_dy();
       }
 
+      // CraftBukkit start
+      String spawnWorld = p_70037_1_.func_74779_i("SpawnWorld");
+      CraftWorld oldWorld = (CraftWorld) Bukkit.getWorld(spawnWorld);
+      if (oldWorld != null) {
+         this.field_241137_cq_ = oldWorld.getHandle().func_234923_W_();
+      }
+      // CraftBukkit end
+
       if (p_70037_1_.func_150297_b("SpawnX", 99) && p_70037_1_.func_150297_b("SpawnY", 99) && p_70037_1_.func_150297_b("SpawnZ", 99)) {
          this.field_241138_cr_ = new BlockPos(p_70037_1_.func_74762_e("SpawnX"), p_70037_1_.func_74762_e("SpawnY"), p_70037_1_.func_74762_e("SpawnZ"));
          this.field_241139_cs_ = p_70037_1_.func_74767_n("SpawnForced");
@@ -282,7 +_,20 @@
 
       Entity entity1 = this.func_184208_bv();
       Entity entity = this.func_184187_bx();
-      if (entity != null && entity1 != this && entity1.func_200601_bK()) {
+      // CraftBukkit start - handle non-persistent vehicles
+      boolean persistVehicle = true;
+      if (entity != null) {
+         Entity vehicle;
+         for (vehicle = entity; vehicle != null; vehicle = vehicle.func_184187_bx()) {
+            if (!vehicle.persist) {
+               persistVehicle = false;
+               break;
+            }
+         }
+      }
+
+      if (persistVehicle && entity != null && entity1 != this && entity1.func_200601_bK()) {
+         // CraftBukkit end
          CompoundNBT compoundnbt1 = new CompoundNBT();
          CompoundNBT compoundnbt2 = new CompoundNBT();
          entity1.func_70039_c(compoundnbt2);
@@ -303,8 +_,31 @@
             p_213281_1_.func_218657_a("SpawnDimension", p_241148_1_);
          });
       }
+      this.getBukkitEntity().setExtraData(p_213281_1_); // CraftBukkit
+   }
 
+   // CraftBukkit start - World fallback code, either respawn location or global spawn
+   public void func_70029_a(World world) {
+      super.func_70029_a(world);
+      if (world == null) {
+         this.field_70729_aU = false;
+         Vector3d position = null;
+         if (this.field_241137_cq_ != null) {
+            world = this.func_71121_q().getCBServer().getHandle().func_72365_p().func_71218_a(this.field_241137_cq_);
+            if (world != null && this.func_241140_K_() != null) {
+               position = PlayerEntity.func_242374_a((ServerWorld) world, this.func_241140_K_(), this.func_242109_L(), false, false).orElse(null);
+            }
+         }
+         if (world == null || position == null) {
+            world = ((CraftWorld) Bukkit.getServer().getWorlds().get(0)).getHandle();
+            position = Vector3d.func_237489_a_(((ServerWorld) world).func_241135_u_());
+         }
+         this.field_70170_p = world;
+         this.func_70107_b(position.func_82615_a(), position.func_82617_b(), position.func_82616_c());
+      }
+      this.field_71134_c.func_73080_a((ServerWorld) world);
    }
+   // CraftBukkit end
 
    public void func_195394_a(int p_195394_1_) {
       float f = (float)this.func_71050_bK();
@@ -351,6 +_,11 @@
    }
 
    public void func_70071_h_() {
+      // CraftBukkit start
+      if (this.joining) {
+         this.joining = false;
+      }
+      // CraftBukkit end
       this.field_71134_c.func_73075_a();
       --this.field_147101_bU;
       if (this.field_70172_ad > 0) {
@@ -415,7 +_,7 @@
          }
 
          if (this.func_110143_aJ() != this.field_71149_ch || this.field_71146_ci != this.field_71100_bB.func_75116_a() || this.field_71100_bB.func_75115_e() == 0.0F != this.field_71147_cj) {
-            this.field_71135_a.func_147359_a(new SUpdateHealthPacket(this.func_110143_aJ(), this.field_71100_bB.func_75116_a(), this.field_71100_bB.func_75115_e()));
+            this.field_71135_a.func_147359_a(new SUpdateHealthPacket(this.getBukkitEntity().getScaledHealth(), this.field_71100_bB.func_75116_a(), this.field_71100_bB.func_75115_e())); // CraftBukkit
             this.field_71149_ch = this.func_110143_aJ();
             this.field_71146_ci = this.field_71100_bB.func_75116_a();
             this.field_71147_cj = this.field_71100_bB.func_75115_e() == 0.0F;
@@ -446,6 +_,12 @@
             this.func_184849_a(ScoreCriteria.field_186701_k, MathHelper.func_76123_f((float)this.field_184856_bZ));
          }
 
+         // CraftBukkit start - Force max health updates
+         if (this.maxHealthCache != this.func_110138_aP()) {
+            this.getBukkitEntity().updateScaledHealth();
+         }
+         // CraftBukkit end
+
          if (this.field_71068_ca != this.field_184855_bY) {
             this.field_184855_bY = this.field_71068_ca;
             this.func_184849_a(ScoreCriteria.field_186702_l, MathHelper.func_76123_f((float)this.field_184855_bY));
@@ -460,6 +_,16 @@
             CriteriaTriggers.field_192135_o.func_192215_a(this);
          }
 
+         // CraftBukkit start - initialize oldLevel and fire PlayerLevelChangeEvent
+         if (this.oldLevel == -1) {
+            this.oldLevel = this.field_71068_ca;
+         }
+         if (this.oldLevel != this.field_71068_ca) {
+            CraftEventFactory.callPlayerLevelChangeEvent(this.field_70170_p.getCBServer().getPlayer((ServerPlayerEntity) this), this.oldLevel, this.field_71068_ca);
+            this.oldLevel = this.field_71068_ca;
+         }
+         // CraftBukkit end
+
       } catch (Throwable throwable) {
          CrashReport crashreport = CrashReport.func_85055_a(throwable, "Ticking player");
          CrashReportCategory crashreportcategory = crashreport.func_85058_a("Player being ticked");
@@ -469,15 +_,55 @@
    }
 
    private void func_184849_a(ScoreCriteria p_184849_1_, int p_184849_2_) {
-      this.func_96123_co().func_197893_a(p_184849_1_, this.func_195047_I_(), (p_195397_1_) -> {
+      // CraftBukkit - Use our scores instead
+      this.field_70170_p.getCBServer().getScoreboardManager().getScoreboardScores(p_184849_1_, this.func_195047_I_(), (p_195397_1_) -> {
          p_195397_1_.func_96647_c(p_184849_2_);
       });
    }
 
    public void func_70645_a(DamageSource p_70645_1_) {
+      if (net.minecraftforge.common.ForgeHooks.onLivingDeath(this, p_70645_1_)) return;
       boolean flag = this.field_70170_p.func_82736_K().func_223586_b(GameRules.field_223609_l);
-      if (flag) {
-         ITextComponent itextcomponent = this.func_110142_aN().func_151521_b();
+
+      if (this.field_70729_aU) {
+         return;
+      }
+
+      java.util.List<org.bukkit.inventory.ItemStack> loot = new java.util.ArrayList<>(this.field_71071_by.func_70302_i_());
+      boolean keepInventory = this.field_70170_p.func_82736_K().func_223586_b(GameRules.field_223600_c) || this.func_175149_v();
+      // LoliServer start
+      PlayerInventory playerInventoryCapture = new PlayerInventory(this);
+      playerInventoryCapture.func_70455_b(this.field_71071_by);
+      func_213345_d(p_70645_1_);
+      for (ItemEntity itemEntity : capturedDeathDrops) {
+         ItemStack item = itemEntity.func_92059_d();
+         if (!item.func_190926_b() && !EnchantmentHelper.func_190939_c(item)) {
+            loot.add(CraftItemStack.asCraftMirror(item));
+         }
+      }
+      capturedDeathDrops.clear();
+      // LoliServer end
+
+      ITextComponent defaultMessage = this.func_110142_aN().func_151521_b();
+
+      String deathmessage = defaultMessage.getString();
+      PlayerDeathEvent event = CraftEventFactory.callPlayerDeathEvent(this, loot, deathmessage, keepInventory);
+
+      // SPIGOT-943 - only call if they have an inventory open
+      if (this.field_71070_bA != this.field_71069_bz) {
+         this.func_71053_j();
+      }
+
+      String deathMessage = event.getDeathMessage();
+
+      if (deathMessage != null && deathMessage.length() > 0 && flag) { // TODO: allow plugins to override?
+         ITextComponent itextcomponent;
+         if (deathMessage.equals(deathmessage)) {
+            itextcomponent = this.func_110142_aN().func_151521_b();
+         } else {
+            itextcomponent = org.bukkit.craftbukkit.v1_16_R3.util.CraftChatMessage.fromStringOrNull(deathMessage);
+         }
+
          this.field_71135_a.func_211148_a(new SCombatPacket(this.func_110142_aN(), SCombatPacket.Event.ENTITY_DIED, itextcomponent), (p_212356_2_) -> {
             if (!p_212356_2_.isSuccess()) {
                int i = 256;
@@ -509,11 +_,17 @@
          this.func_241157_eT_();
       }
 
-      if (!this.func_175149_v()) {
-         this.func_213345_d(p_70645_1_);
+      // SPIGOT-5478 must be called manually now
+      this.func_226294_cV_();
+      // we clean the player's inventory after the EntityDeathEvent is called so plugins can get the exact state of the inventory.
+      if (!event.getKeepInventory()) {
+         this.field_71071_by.func_174888_l();
+      } else { // LoliServer start
+         this.field_71071_by = playerInventoryCapture;  // LoliServer enc
       }
 
-      this.func_96123_co().func_197893_a(ScoreCriteria.field_96642_c, this.func_195047_I_(), Score::func_96648_a);
+      // CraftBukkit - Get our scores instead
+      this.field_70170_p.getCBServer().getScoreboardManager().getScoreboardScores(ScoreCriteria.field_96642_c, this.func_195047_I_(), Score::func_96648_a);
       LivingEntity livingentity = this.func_94060_bK();
       if (livingentity != null) {
          this.func_71029_a(Stats.field_199091_i.func_199076_b(livingentity.func_200600_R()));
@@ -545,10 +_,12 @@
          this.func_85039_t(p_191956_2_);
          String s = this.func_195047_I_();
          String s1 = p_191956_1_.func_195047_I_();
-         this.func_96123_co().func_197893_a(ScoreCriteria.field_96640_e, s, Score::func_96648_a);
+         // CraftBukkit - Get our scores instead
+         this.field_70170_p.getCBServer().getScoreboardManager().getScoreboardScores(ScoreCriteria.field_96640_e, s, Score::func_96648_a);
          if (p_191956_1_ instanceof PlayerEntity) {
             this.func_195066_a(Stats.field_75932_A);
-            this.func_96123_co().func_197893_a(ScoreCriteria.field_96639_d, s, Score::func_96648_a);
+            // CraftBukkit - Get our scores instead
+            this.field_70170_p.getCBServer().getScoreboardManager().getScoreboardScores(ScoreCriteria.field_96639_d, s, Score::func_96648_a);
          } else {
             this.func_195066_a(Stats.field_188070_B);
          }
@@ -564,7 +_,8 @@
       if (scoreplayerteam != null) {
          int i = scoreplayerteam.func_178775_l().func_175746_b();
          if (i >= 0 && i < p_195398_3_.length) {
-            this.func_96123_co().func_197893_a(p_195398_3_[i], p_195398_1_, Score::func_96648_a);
+            // CraftBukkit - Get our scores instead
+            this.field_70170_p.getCBServer().getScoreboardManager().getScoreboardScores(p_195398_3_[i], p_195398_1_, Score::func_96648_a);
          }
       }
 
@@ -603,78 +_,128 @@
    }
 
    private boolean func_175400_cq() {
-      return this.field_71133_b.func_71219_W();
+      // CraftBukkit - this.server.isPVPEnabled() -> this.world.pvpMode
+      return this.field_70170_p.pvpMode;
    }
 
    @Nullable
    protected PortalInfo func_241829_a(ServerWorld p_241829_1_) {
       PortalInfo portalinfo = super.func_241829_a(p_241829_1_);
-      if (portalinfo != null && this.field_70170_p.func_234923_W_() == World.field_234918_g_ && p_241829_1_.func_234923_W_() == World.field_234920_i_) {
+      p_241829_1_ = (portalinfo == null) ? p_241829_1_ : portalinfo.world; // CraftBukkit
+
+      if (portalinfo != null && this.field_70170_p.getTypeKey() == DimensionType.field_235999_c_ && p_241829_1_ != null && p_241829_1_.getTypeKey() == DimensionType.field_236001_e_) { // CraftBukkit
          Vector3d vector3d = portalinfo.field_222505_a.func_72441_c(0.0D, -1.0D, 0.0D);
-         return new PortalInfo(vector3d, Vector3d.field_186680_a, 90.0F, 0.0F);
+         return new PortalInfo(vector3d, Vector3d.field_186680_a, 90.0F, 0.0F).putCB(p_241829_1_, portalinfo.portalEventInfo); // CatServer
       } else {
          return portalinfo;
       }
    }
 
    @Nullable
-   public Entity func_241206_a_(ServerWorld p_241206_1_) {
+   public Entity changeDimension(ServerWorld p_241206_1_, net.minecraftforge.common.util.ITeleporter teleporter) {
+      // CraftBukkit - start
+      return changeDimension(p_241206_1_, teleporter, TeleportCause.UNKNOWN);
+   }
+
+   @Nullable
+   public Entity changeDimension(ServerWorld server, net.minecraftforge.common.util.ITeleporter teleporter, PlayerTeleportEvent.TeleportCause cause) {
+      // CraftBukkit end
+      if (!net.minecraftforge.common.ForgeHooks.onTravelToDimension(this, server.func_234923_W_())) {
+         return null;
+      }
+      if (this.func_70608_bn()) {
+         return this; // CraftBukkit - SPIGOT-3154
+      }
+      PortalInfo portalinfo = teleporter.getPortalInfo(this, server, this::func_241829_a);
+      if (portalinfo == null)
+         return null;
+      // CraftBukkit - start
+      Location enter = this.getBukkitEntity().getLocation();
+      Location exit = (server == null) ? null : new Location(server.getWorld(), portalinfo.field_222505_a.field_72450_a, portalinfo.field_222505_a.field_72448_b, portalinfo.field_222505_a.field_72449_c, portalinfo.field_242960_c, portalinfo.field_242961_d);
+      final PlayerTeleportEvent tpEvent = new PlayerTeleportEvent(this.getBukkitEntity(), enter, exit, cause);
+      Bukkit.getServer().getPluginManager().callEvent(tpEvent);
+      if (tpEvent.isCancelled() || tpEvent.getTo() == null) {
+         return null;
+      }
+      // CraftBukkit end
       this.field_184851_cj = true;
       ServerWorld serverworld = this.func_71121_q();
       RegistryKey<World> registrykey = serverworld.func_234923_W_();
-      if (registrykey == World.field_234920_i_ && p_241206_1_.func_234923_W_() == World.field_234918_g_) {
+      if (registrykey == World.field_234920_i_ && server.func_234923_W_() == World.field_234918_g_ && teleporter.isVanilla()) { //Forge: Fix non-vanilla teleporters triggering end credits
          this.func_213319_R();
-         this.func_71121_q().func_217434_e(this);
+         this.func_71121_q().removePlayer(this, true); //Forge: The player entity is cloned so keep the data until after cloning calls copyFrom
          if (!this.field_71136_j) {
             this.field_71136_j = true;
             this.field_71135_a.func_147359_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241768_e_, this.field_192040_cp ? 0.0F : 1.0F));
             this.field_192040_cp = true;
          }
-
          return this;
       } else {
-         IWorldInfo iworldinfo = p_241206_1_.func_72912_H();
-         this.field_71135_a.func_147359_a(new SRespawnPacket(p_241206_1_.func_230315_m_(), p_241206_1_.func_234923_W_(), BiomeManager.func_235200_a_(p_241206_1_.func_72905_C()), this.field_71134_c.func_73081_b(), this.field_71134_c.func_241815_c_(), p_241206_1_.func_234925_Z_(), p_241206_1_.func_241109_A_(), true));
+         IWorldInfo iworldinfo = server.func_72912_H();
+         this.field_71135_a.func_147359_a(new SRespawnPacket(server.func_230315_m_(), server.func_234923_W_(), BiomeManager.func_235200_a_(server.func_72905_C()), this.field_71134_c.func_73081_b(), this.field_71134_c.func_241815_c_(), server.func_234925_Z_(), server.func_241109_A_(), true));
          this.field_71135_a.func_147359_a(new SServerDifficultyPacket(iworldinfo.func_176130_y(), iworldinfo.func_176123_z()));
          PlayerList playerlist = this.field_71133_b.func_184103_al();
          playerlist.func_187243_f(this);
-         serverworld.func_217434_e(this);
-         this.field_70128_L = false;
-         PortalInfo portalinfo = this.func_241829_a(p_241206_1_);
+         serverworld.removeEntity(this, true); //Forge: the player entity is moved to the new world, NOT cloned. So keep the data alive with no matching invalidate call.
+         this.revive();
          if (portalinfo != null) {
+            Entity e = teleporter.placeEntity(this, serverworld, server, this.field_70177_z, spawnPortal -> {//Forge: Start vanilla logic
             serverworld.func_217381_Z().func_76320_a("moving");
-            if (registrykey == World.field_234918_g_ && p_241206_1_.func_234923_W_() == World.field_234919_h_) {
+            if (registrykey == World.field_234918_g_ && server.func_234923_W_() == World.field_234919_h_) {
                this.field_193110_cw = this.func_213303_ch();
-            } else if (p_241206_1_.func_234923_W_() == World.field_234920_i_) {
-               this.func_242110_a(p_241206_1_, new BlockPos(portalinfo.field_222505_a));
+            } else if (spawnPortal && server.func_234923_W_() == World.field_234920_i_) {
+               this.func_242110_a(server, new BlockPos(portalinfo.field_222505_a));
             }
-
-            serverworld.func_217381_Z().func_76319_b();
-            serverworld.func_217381_Z().func_76320_a("placing");
-            this.func_70029_a(p_241206_1_);
-            p_241206_1_.func_217447_b(this);
-            this.func_70101_b(portalinfo.field_242960_c, portalinfo.field_242961_d);
-            this.func_225653_b_(portalinfo.field_222505_a.field_72450_a, portalinfo.field_222505_a.field_72448_b, portalinfo.field_222505_a.field_72449_c);
-            serverworld.func_217381_Z().func_76319_b();
-            this.func_213846_b(serverworld);
-            this.field_71134_c.func_73080_a(p_241206_1_);
+               serverworld.func_217381_Z().func_76319_b();
+               serverworld.func_217381_Z().func_76320_a("placing");
+               this.func_70029_a(server);
+               server.func_217447_b(this);
+               this.func_70101_b(portalinfo.field_242960_c, portalinfo.field_242961_d);
+               this.func_225653_b_(portalinfo.field_222505_a.field_72450_a, portalinfo.field_222505_a.field_72448_b, portalinfo.field_222505_a.field_72449_c);
+               serverworld.func_217381_Z().func_76319_b();
+               this.func_213846_b(serverworld);
+               return this;//forge: this is part of the ITeleporter patch
+            });//Forge: End vanilla logic
+            if (e != this) throw new java.lang.IllegalArgumentException(String.format("Teleporter %s returned not the player entity but instead %s, expected PlayerEntity %s", teleporter, e, this));
+            this.field_71134_c.func_73080_a(server);
             this.field_71135_a.func_147359_a(new SPlayerAbilitiesPacket(this.field_71075_bZ));
-            playerlist.func_72354_b(this, p_241206_1_);
+            playerlist.func_72354_b(this, server);
             playerlist.func_72385_f(this);
 
-            for(EffectInstance effectinstance : this.func_70651_bq()) {
+            for (EffectInstance effectinstance : this.func_70651_bq()) {
                this.field_71135_a.func_147359_a(new SPlayEntityEffectPacket(this.func_145782_y(), effectinstance));
             }
 
+            if (teleporter.playTeleportSound(this, serverworld, server))
             this.field_71135_a.func_147359_a(new SPlaySoundEventPacket(1032, BlockPos.field_177992_a, 0, false));
             this.field_71144_ck = -1;
             this.field_71149_ch = -1.0F;
             this.field_71146_ci = -1;
+            func_226284_e_(false); // Paper - fix MC-10657
+            net.minecraftforge.fml.hooks.BasicEventHooks.firePlayerChangedDimensionEvent(this, registrykey, server.func_234923_W_());
+            // CraftBukkit start
+            PlayerChangedWorldEvent changeEvent = new PlayerChangedWorldEvent(this.getBukkitEntity(), serverworld.getWorld());
+            this.field_70170_p.getCBServer().getPluginManager().callEvent(changeEvent);
+            // CraftBukkit end
          }
 
          return this;
       }
    }
+
+   // CraftBukkit start
+   @Override
+   protected CraftPortalEvent callPortalEvent(Entity entity, ServerWorld exitWorldServer, BlockPos exitPosition, TeleportCause cause, int searchRadius, int creationRadius) {
+      Location enter = this.getBukkitEntity().getLocation();
+      Location exit = new Location(exitWorldServer.getWorld(), exitPosition.func_177958_n(), exitPosition.func_177956_o(), exitPosition.func_177952_p(), field_70177_z, field_70125_A);
+      PlayerPortalEvent event = new PlayerPortalEvent(this.getBukkitEntity(), enter, exit, cause, searchRadius, true, creationRadius);
+      Bukkit.getServer().getPluginManager().callEvent(event);
+      if (event.isCancelled() || event.getTo() == null || event.getTo().getWorld() == null) {
+         return null;
+      }
+      return new CraftPortalEvent(event);
+   }
+   // CraftBukkit end
 
    private void func_242110_a(ServerWorld p_242110_1_, BlockPos p_242110_2_) {
       BlockPos.Mutable blockpos$mutable = p_242110_2_.func_239590_i_();
@@ -690,22 +_,22 @@
 
    }
 
-   protected Optional<TeleportationRepositioner.Result> func_241830_a(ServerWorld p_241830_1_, BlockPos p_241830_2_, boolean p_241830_3_) {
-      Optional<TeleportationRepositioner.Result> optional = super.func_241830_a(p_241830_1_, p_241830_2_, p_241830_3_);
+   protected Optional<TeleportationRepositioner.Result> getExitPortal(ServerWorld p_241830_1_, BlockPos p_241830_2_, boolean p_241830_3_, int radius, boolean canCreatePortal, int createRadius) { // CraftBukkit
+      Optional<TeleportationRepositioner.Result> optional = super.getExitPortal(p_241830_1_, p_241830_2_, p_241830_3_, radius, canCreatePortal, createRadius); // CraftBukkit
       if (optional.isPresent()) {
          return optional;
       } else {
          Direction.Axis direction$axis = this.field_70170_p.func_180495_p(this.field_242271_ac).func_235903_d_(NetherPortalBlock.field_176550_a).orElse(Direction.Axis.X);
          Optional<TeleportationRepositioner.Result> optional1 = p_241830_1_.func_85176_s().func_242956_a(p_241830_2_, direction$axis);
          if (!optional1.isPresent()) {
-            field_147102_bM.error("Unable to create a portal, likely target out of worldborder");
+            //LOGGER.error("Unable to create a portal, likely target out of worldborder");
          }
 
          return optional1;
       }
    }
 
-   private void func_213846_b(ServerWorld p_213846_1_) {
+   public void func_213846_b(ServerWorld p_213846_1_) { // private->public CraftBukkit
       RegistryKey<World> registrykey = p_213846_1_.func_234923_W_();
       RegistryKey<World> registrykey1 = this.field_70170_p.func_234923_W_();
       CriteriaTriggers.field_193134_u.func_233551_a_(this, registrykey, registrykey1);
@@ -742,43 +_,94 @@
       this.field_71070_bA.func_75142_b();
    }
 
-   public Either<PlayerEntity.SleepResult, Unit> func_213819_a(BlockPos p_213819_1_) {
-      Direction direction = this.field_70170_p.func_180495_p(p_213819_1_).func_177229_b(HorizontalBlock.field_185512_D);
+   // CraftBukkit start - moved bed result checks from below into separate method
+   public Either<PlayerEntity.SleepResult, Unit> getBedResult(BlockPos at, Direction direction) {
+      java.util.Optional<BlockPos> optAt = java.util.Optional.of(at);
+      PlayerEntity.SleepResult ret = net.minecraftforge.event.ForgeEventFactory.onPlayerSleepInBed(this, optAt);
+      if (ret != null) {
+         return Either.left(ret);
+      }
       if (!this.func_70608_bn() && this.func_70089_S()) {
          if (!this.field_70170_p.func_230315_m_().func_236043_f_()) {
             return Either.left(PlayerEntity.SleepResult.NOT_POSSIBLE_HERE);
-         } else if (!this.func_241147_a_(p_213819_1_, direction)) {
+         } else if (!this.func_241147_a_(at, direction)) {
             return Either.left(PlayerEntity.SleepResult.TOO_FAR_AWAY);
-         } else if (this.func_241156_b_(p_213819_1_, direction)) {
+         } else if (this.func_241156_b_(at, direction)) {
             return Either.left(PlayerEntity.SleepResult.OBSTRUCTED);
          } else {
-            this.func_242111_a(this.field_70170_p.func_234923_W_(), p_213819_1_, this.field_70177_z, false, true);
-            if (this.field_70170_p.func_72935_r()) {
+            this.func_242111_a(this.field_70170_p.func_234923_W_(), at, this.field_70177_z, false, true);
+            if (!net.minecraftforge.event.ForgeEventFactory.fireSleepingTimeCheck(this, optAt)) {
                return Either.left(PlayerEntity.SleepResult.NOT_POSSIBLE_NOW);
             } else {
                if (!this.func_184812_l_()) {
                   double d0 = 8.0D;
                   double d1 = 5.0D;
-                  Vector3d vector3d = Vector3d.func_237492_c_(p_213819_1_);
-                  List<MonsterEntity> list = this.field_70170_p.func_175647_a(MonsterEntity.class, new AxisAlignedBB(vector3d.func_82615_a() - 8.0D, vector3d.func_82617_b() - 5.0D, vector3d.func_82616_c() - 8.0D, vector3d.func_82615_a() + 8.0D, vector3d.func_82617_b() + 5.0D, vector3d.func_82616_c() + 8.0D), (p_241146_1_) -> {
-                     return p_241146_1_.func_230292_f_(this);
-                  });
+                  Vector3d vector3d = Vector3d.func_237492_c_(at);
+                  List<MonsterEntity> list = this.field_70170_p.func_175647_a(MonsterEntity.class,
+                      new AxisAlignedBB(vector3d.func_82615_a() - 8.0D, vector3d.func_82617_b() - 5.0D, vector3d.func_82616_c() - 8.0D, vector3d.func_82615_a() + 8.0D, vector3d.func_82617_b() + 5.0D, vector3d.func_82616_c() + 8.0D),
+                      (p_241146_1_) -> {
+                         return p_241146_1_.func_230292_f_(this);
+                      });
                   if (!list.isEmpty()) {
                      return Either.left(PlayerEntity.SleepResult.NOT_SAFE);
                   }
                }
 
-               Either<PlayerEntity.SleepResult, Unit> either = super.func_213819_a(p_213819_1_).ifRight((p_241144_1_) -> {
+                   //          Either<PlayerEntity.SleepResult, Unit> either = super.trySleep(at).ifRight((p_241144_1_) -> {
+               return Either.right(Unit.INSTANCE);
+            }
+         }
+      } else {
+         return Either.left(PlayerEntity.SleepResult.OTHER_PROBLEM);
+      }
+   }
+
+   @SuppressWarnings("unused")
+   public Either<PlayerEntity.SleepResult, Unit> func_213819_a(BlockPos p_213819_1_) {
+      Optional<?> optAt = null;
+      PlayerEntity.SleepResult ret = null;
+      Direction direction = null;
+      double d0 = 0;
+      double d1 = 0;
+      Vector3d vector3d = Vector3d.func_237492_c_(p_213819_1_);
+      List<MonsterEntity> list = this.field_70170_p.func_175647_a(
+         MonsterEntity.class,
+         new AxisAlignedBB(vector3d.func_82615_a() - 8.0D, vector3d.func_82617_b() - 5.0D, vector3d.func_82616_c() - 8.0D, vector3d.func_82615_a() + 8.0D, vector3d.func_82617_b() + 5.0D, vector3d.func_82616_c() + 8.0D),
+         (p_241146_1_) -> {
+            return p_241146_1_.func_230292_f_(this);
+         }
+      );
+      return this.sleep(p_213819_1_, false);
+   }
+
+   @Override
+   public Either<PlayerEntity.SleepResult, Unit> sleep(BlockPos blockposition, boolean force) {
+      Direction enumdirection = (Direction) this.field_70170_p.func_180495_p(blockposition).func_177229_b(HorizontalBlock.field_185512_D);
+      Either<PlayerEntity.SleepResult, Unit> bedResult = this.getBedResult(blockposition, enumdirection);
+      if (bedResult.left().orElse(null) == PlayerEntity.SleepResult.OTHER_PROBLEM) {
+         return bedResult; // return immediately if the result is not bypassable by plugins
+      }
+      if (force) {
+         bedResult = Either.right(Unit.INSTANCE);
+      }
+      bedResult = org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callPlayerBedEnterEvent(this, blockposition, bedResult);
+      if (bedResult.left().isPresent()) {
+         return bedResult;
+      }
+      {
+         {
+            {
+               Either<PlayerEntity.SleepResult, Unit> either = super.sleep(blockposition, force).ifRight((unit) -> {
                   this.func_195066_a(Stats.field_188064_ad);
                   CriteriaTriggers.field_192136_p.func_192215_a(this);
                });
-               ((ServerWorld)this.field_70170_p).func_72854_c();
+               ((ServerWorld) this.field_70170_p).func_72854_c();
                return either;
             }
          }
-      } else {
-         return Either.left(PlayerEntity.SleepResult.OTHER_PROBLEM);
+
       }
+      // CraftBukkit end
    }
 
    public void func_213342_e(BlockPos p_213342_1_) {
@@ -787,6 +_,7 @@
    }
 
    private boolean func_241147_a_(BlockPos p_241147_1_, Direction p_241147_2_) {
+      if (p_241147_2_ == null) return false;
       return this.func_241158_g_(p_241147_1_) || this.func_241158_g_(p_241147_1_.func_177972_a(p_241147_2_.func_176734_d()));
    }
 
@@ -801,6 +_,24 @@
    }
 
    public void func_225652_a_(boolean p_225652_1_, boolean p_225652_2_) {
+      if (!this.func_70608_bn()) return; // CraftBukkit - Can't leave bed if not in one!
+      // CraftBukkit start - fire PlayerBedLeaveEvent
+      CraftPlayer player = this.getBukkitEntity();
+      BlockPos bedPosition = this.func_213374_dv().orElse(null);
+
+      org.bukkit.block.Block bed;
+      if (bedPosition != null) {
+         bed = this.field_70170_p.getWorld().getBlockAt(bedPosition.func_177958_n(), bedPosition.func_177956_o(), bedPosition.func_177952_p());
+      } else {
+         bed = this.field_70170_p.getWorld().getBlockAt(player.getLocation());
+      }
+
+      PlayerBedLeaveEvent event = new PlayerBedLeaveEvent(player, bed, true);
+      this.field_70170_p.getCBServer().getPluginManager().callEvent(event);
+      if (event.isCancelled()) {
+         return;
+      }
+      // CraftBukkit end
       if (this.func_70608_bn()) {
          this.func_71121_q().func_72863_F().func_217216_a(this, new SAnimateHandPacket(this, 2));
       }
@@ -859,6 +_,7 @@
 
    public void func_175141_a(SignTileEntity p_175141_1_) {
       p_175141_1_.func_145912_a(this);
+      if (this.field_71135_a == null) return;
       this.field_71135_a.func_147359_a(new SOpenSignMenuPacket(p_175141_1_.func_174877_v()));
    }
 
@@ -866,6 +_,13 @@
       this.field_71139_cq = this.field_71139_cq % 100 + 1;
    }
 
+   // CraftBukkit start
+   public int nextContainerCounterCB() {
+      func_71117_bO();
+      return field_71139_cq;
+   }
+   // CraftBukkit end
+
    public OptionalInt func_213829_a(@Nullable INamedContainerProvider p_213829_1_) {
       if (p_213829_1_ == null) {
          return OptionalInt.empty();
@@ -876,16 +_,37 @@
 
          this.func_71117_bO();
          Container container = p_213829_1_.createMenu(this.field_71139_cq, this.field_71071_by, this);
+         // CraftBukkit start - Inventory open hook
+         if (container != null) {
+            container.setTitle(p_213829_1_.func_145748_c_());
+
+            boolean cancelled = false;
+            container = CraftEventFactory.callInventoryOpenEvent(this, container, cancelled);
+            if (container == null && !cancelled) { // Let pre-cancelled events fall through
+               // SPIGOT-5263 - close chest if cancelled
+               if (p_213829_1_ instanceof IInventory) {
+                  ((IInventory) p_213829_1_).func_174886_c(this);
+               } else if (p_213829_1_ instanceof DoubleInventory) {
+                  // SPIGOT-5355 - double chests too :(
+                  ((DoubleInventory) p_213829_1_).inventorylargechest.func_174886_c(this);
+               }
+               return OptionalInt.empty();
+            }
+         }
+         // CraftBukkit end
          if (container == null) {
             if (this.func_175149_v()) {
                this.func_146105_b((new TranslationTextComponent("container.spectatorCantOpen")).func_240699_a_(TextFormatting.RED), true);
             }
 
             return OptionalInt.empty();
-         } else {
-            this.field_71135_a.func_147359_a(new SOpenWindowPacket(container.field_75152_c, container.func_216957_a(), p_213829_1_.func_145748_c_()));
-            container.func_75132_a(this);
+         }  else {
+            // CraftBukkit start
             this.field_71070_bA = container;
+            this.field_71135_a.func_147359_a(new SOpenWindowPacket(container.field_75152_c, container.func_216957_a(), container.getTitle()));
+            // CraftBukkit end
+            container.func_75132_a(this);
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.player.PlayerContainerEvent.Open(this, this.field_71070_bA));
             return OptionalInt.of(this.field_71139_cq);
          }
       }
@@ -896,14 +_,26 @@
    }
 
    public void func_184826_a(AbstractHorseEntity p_184826_1_, IInventory p_184826_2_) {
-      if (this.field_71070_bA != this.field_71069_bz) {
-         this.func_71053_j();
-      }
-
+      // CraftBukkit start - Inventory open hook
       this.func_71117_bO();
+      Container container = new HorseInventoryContainer(this.field_71139_cq, this.field_71071_by, p_184826_2_, p_184826_1_);
+      container.setTitle(p_184826_1_.func_145748_c_());
+      container = CraftEventFactory.callInventoryOpenEvent(this, container);
+      if (container == null) {
+         p_184826_2_.func_174886_c(this);
+         return;
+      }
+      // CraftBukkit end
+
+      if (this.field_71070_bA != this.field_71069_bz) {
+         this.func_71053_j();
+      }
+
+      // this.getNextWindowId(); // CraftBukkit - Moved up
       this.field_71135_a.func_147359_a(new SOpenHorseWindowPacket(this.field_71139_cq, p_184826_2_.func_70302_i_(), p_184826_1_.func_145782_y()));
-      this.field_71070_bA = new HorseInventoryContainer(this.field_71139_cq, this.field_71071_by, p_184826_2_, p_184826_1_);
+      this.field_71070_bA = container; // CraftBukkit
       this.field_71070_bA.func_75132_a(this);
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.player.PlayerContainerEvent.Open(this, this.field_71070_bA));
    }
 
    public void func_184814_a(ItemStack p_184814_1_, Hand p_184814_2_) {
@@ -940,8 +_,14 @@
    }
 
    public void func_71110_a(Container p_71110_1_, NonNullList<ItemStack> p_71110_2_) {
+      if (this.field_71135_a == null) return;
       this.field_71135_a.func_147359_a(new SWindowItemsPacket(p_71110_1_.field_75152_c, p_71110_2_));
       this.field_71135_a.func_147359_a(new SSetSlotPacket(-1, -1, this.field_71071_by.func_70445_o()));
+      // CraftBukkit start - Send a Set Slot to update the crafting result slot
+      if (java.util.EnumSet.of(InventoryType.CRAFTING, InventoryType.WORKBENCH).contains(field_71069_bz.getBukkitView().getType())) {
+         this.field_71135_a.func_147359_a(new SSetSlotPacket(field_71069_bz.field_75152_c, 0, field_71069_bz.func_75139_a(0).func_75211_c()));
+      }
+      // CraftBukkit end
    }
 
    public void func_71112_a(Container p_71112_1_, int p_71112_2_, int p_71112_3_) {
@@ -949,6 +_,7 @@
    }
 
    public void func_71053_j() {
+      CraftEventFactory.handleInventoryCloseEvent(this); // CraftBukkit
       this.field_71135_a.func_147359_a(new SCloseWindowPacket(this.field_71070_bA.field_75152_c));
       this.func_71128_l();
    }
@@ -961,6 +_,7 @@
 
    public void func_71128_l() {
       this.field_71070_bA.func_75134_a(this);
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.player.PlayerContainerEvent.Close(this, this.field_71070_bA));
       this.field_71070_bA = this.field_71069_bz;
    }
 
@@ -982,14 +_,14 @@
 
    public void func_71064_a(Stat<?> p_71064_1_, int p_71064_2_) {
       this.field_147103_bO.func_150871_b(this, p_71064_1_, p_71064_2_);
-      this.func_96123_co().func_197893_a(p_71064_1_, this.func_195047_I_(), (p_195396_1_) -> {
+      this.field_70170_p.getCBServer().getScoreboardManager().getScoreboardScores(p_71064_1_, this.func_195047_I_(), (p_195396_1_) -> {  // CraftBukkit - Get our scores instead
          p_195396_1_.func_96649_a(p_71064_2_);
       });
    }
 
    public void func_175145_a(Stat<?> p_175145_1_) {
       this.field_147103_bO.func_150873_a(this, p_175145_1_, 0);
-      this.func_96123_co().func_197893_a(p_175145_1_, this.func_195047_I_(), Score::func_197891_c);
+      this.field_70170_p.getCBServer().getScoreboardManager().getScoreboardScores(p_175145_1_, this.func_195047_I_(), Score::func_197891_c); // CraftBukkit - Get our scores instead
    }
 
    public int func_195065_a(Collection<IRecipe<?>> p_195065_1_) {
@@ -1030,7 +_,16 @@
 
    public void func_71118_n() {
       this.field_71149_ch = -1.0E8F;
-   }
+      this.field_71144_ck = -1; // CraftBukkit - Added to reset
+   }
+
+   // CraftBukkit start - Support multi-line messages
+   public void sendMessage(UUID uuid, ITextComponent[] ichatbasecomponent) {
+      for (ITextComponent component : ichatbasecomponent) {
+         this.func_145747_a(component, (uuid == null) ? Util.field_240973_b_ : uuid);
+      }
+   }
+   // CraftBukkit end
 
    public void func_146105_b(ITextComponent p_146105_1_, boolean p_146105_2_) {
       this.field_71135_a.func_147359_a(new SChatPacket(p_146105_1_, p_146105_2_ ? ChatType.GAME_INFO : ChatType.CHAT, Util.field_240973_b_));
@@ -1079,12 +_,19 @@
       this.field_71144_ck = -1;
       this.field_71149_ch = -1.0F;
       this.field_71146_ci = -1;
-      this.field_192041_cq.func_193824_a(p_193104_1_.field_192041_cq);
+      this.field_192041_cq.func_193824_a(p_193104_1_.field_192041_cq); // LoliServer - Keep forge logic
       this.field_71130_g.addAll(p_193104_1_.field_71130_g);
       this.field_192040_cp = p_193104_1_.field_192040_cp;
       this.field_193110_cw = p_193104_1_.field_193110_cw;
       this.func_192029_h(p_193104_1_.func_192023_dk());
       this.func_192031_i(p_193104_1_.func_192025_dl());
+
+      //Copy over a section of the Entity Data from the old player.
+      //Allows mods to specify data that persists after players respawn.
+      CompoundNBT old = p_193104_1_.getPersistentData();
+      if (old.func_74764_b(PERSISTED_NBT_TAG))
+          getPersistentData().func_218657_a(PERSISTED_NBT_TAG, old.func_74781_a(PERSISTED_NBT_TAG));
+      net.minecraftforge.event.ForgeEventFactory.onPlayerClone(this, p_193104_1_, !p_193104_2_);
    }
 
    protected void func_70670_a(EffectInstance p_70670_1_) {
@@ -1143,6 +_,8 @@
    }
 
    public void func_71033_a(GameType p_71033_1_) {
+      if (!net.minecraftforge.common.ForgeHooks.onChangeGameMode(this, this.field_71134_c.func_73081_b(), p_71033_1_)) return;
+
       this.field_71134_c.func_73076_a(p_71033_1_);
       this.field_71135_a.func_147359_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241767_d_, (float)p_71033_1_.func_77148_a()));
       if (p_71033_1_ == GameType.SPECTATOR) {
@@ -1187,10 +_,22 @@
    }
 
    public void func_147100_a(CClientSettingsPacket p_147100_1_) {
+      // CraftBukkit start
+      if (func_184591_cq() != p_147100_1_.func_186991_f()) {
+         PlayerChangedMainHandEvent event = new PlayerChangedMainHandEvent(getBukkitEntity(), func_184591_cq() == HandSide.LEFT ? MainHand.LEFT : MainHand.RIGHT);
+         this.field_71133_b.server.getPluginManager().callEvent(event);
+      }
+      if (!this.language.equals(p_147100_1_.field_149530_a)) {
+         PlayerLocaleChangeEvent event = new PlayerLocaleChangeEvent(getBukkitEntity(), p_147100_1_.field_149530_a);
+         this.field_71133_b.server.getPluginManager().callEvent(event);
+      }
+      this.clientViewDistance = p_147100_1_.field_149528_b;
+      // CraftBukkit end
       this.field_71143_cn = p_147100_1_.func_149523_e();
       this.field_71140_co = p_147100_1_.func_149520_f();
       this.func_184212_Q().func_187227_b(field_184827_bp, (byte)p_147100_1_.func_149521_d());
       this.func_184212_Q().func_187227_b(field_184828_bq, (byte)(p_147100_1_.func_186991_f() == HandSide.LEFT ? 0 : 1));
+      this.language = p_147100_1_.func_149524_c();
    }
 
    public ChatVisibility func_147096_v() {
@@ -1249,7 +_,7 @@
       this.field_175401_bS = (Entity)(p_175399_1_ == null ? this : p_175399_1_);
       if (entity != this.field_175401_bS) {
          this.field_71135_a.func_147359_a(new SCameraPacket(this.field_175401_bS));
-         this.func_70634_a(this.field_175401_bS.func_226277_ct_(), this.field_175401_bS.func_226278_cu_(), this.field_175401_bS.func_226281_cx_());
+         this.field_71135_a.teleport(this.field_175401_bS.func_226277_ct_(), this.field_175401_bS.func_226278_cu_(), this.field_175401_bS.func_226281_cx_(), this.field_70177_z, this.field_70125_A, TeleportCause.SPECTATE); // CraftBukkit
       }
 
    }
@@ -1276,7 +_,7 @@
 
    @Nullable
    public ITextComponent func_175396_E() {
-      return null;
+      return listName; // CraftBukkit
    }
 
    public void func_184609_a(Hand p_184609_1_) {
@@ -1296,19 +_,20 @@
       return this.field_192042_bX;
    }
 
+
    public void func_200619_a(ServerWorld p_200619_1_, double p_200619_2_, double p_200619_4_, double p_200619_6_, float p_200619_8_, float p_200619_9_) {
       this.func_175399_e(this);
       this.func_184210_p();
       if (p_200619_1_ == this.field_70170_p) {
          this.field_71135_a.func_147364_a(p_200619_2_, p_200619_4_, p_200619_6_, p_200619_8_, p_200619_9_);
-      } else {
+      } else if (net.minecraftforge.common.ForgeHooks.onTravelToDimension(this, p_200619_1_.func_234923_W_())) {
          ServerWorld serverworld = this.func_71121_q();
          IWorldInfo iworldinfo = p_200619_1_.func_72912_H();
          this.field_71135_a.func_147359_a(new SRespawnPacket(p_200619_1_.func_230315_m_(), p_200619_1_.func_234923_W_(), BiomeManager.func_235200_a_(p_200619_1_.func_72905_C()), this.field_71134_c.func_73081_b(), this.field_71134_c.func_241815_c_(), p_200619_1_.func_234925_Z_(), p_200619_1_.func_241109_A_(), true));
          this.field_71135_a.func_147359_a(new SServerDifficultyPacket(iworldinfo.func_176130_y(), iworldinfo.func_176123_z()));
          this.field_71133_b.func_184103_al().func_187243_f(this);
-         serverworld.func_217434_e(this);
-         this.field_70128_L = false;
+         serverworld.removePlayer(this, true); //Forge: The player entity itself is moved, and not cloned. So we need to keep the data alive with no matching invalidate call later.
+         this.revive();
          this.func_70012_b(p_200619_2_, p_200619_4_, p_200619_6_, p_200619_8_, p_200619_9_);
          this.func_70029_a(p_200619_1_);
          p_200619_1_.func_217446_a(this);
@@ -1317,6 +_,7 @@
          this.field_71134_c.func_73080_a(p_200619_1_);
          this.field_71133_b.func_184103_al().func_72354_b(this, p_200619_1_);
          this.field_71133_b.func_184103_al().func_72385_f(this);
+         net.minecraftforge.fml.hooks.BasicEventHooks.firePlayerChangedDimensionEvent(this, serverworld.func_234923_W_(), p_200619_1_.func_234923_W_());
       }
 
    }
@@ -1339,6 +_,7 @@
    }
 
    public void func_242111_a(RegistryKey<World> p_242111_1_, @Nullable BlockPos p_242111_2_, float p_242111_3_, boolean p_242111_4_, boolean p_242111_5_) {
+      if (net.minecraftforge.event.ForgeEventFactory.onPlayerSpawnSet(this, p_242111_2_ == null ? World.field_234918_g_ : p_242111_1_, p_242111_2_, p_242111_4_)) return;
       if (p_242111_2_ != null) {
          boolean flag = p_242111_2_.equals(this.field_241138_cr_) && p_242111_1_.equals(this.field_241137_cq_);
          if (p_242111_5_ && !flag) {
@@ -1361,11 +_,29 @@
    public void func_213844_a(ChunkPos p_213844_1_, IPacket<?> p_213844_2_, IPacket<?> p_213844_3_) {
       this.field_71135_a.func_147359_a(p_213844_3_);
       this.field_71135_a.func_147359_a(p_213844_2_);
+      // Paper start
+      if (PlayerChunkLoadEvent.getHandlerList().getRegisteredListeners().length > 0) {
+         PlayerChunkLoadEvent event = new PlayerChunkLoadEvent(
+                 this.getBukkitEntity().getWorld().getChunkAt(p_213844_1_.field_77276_a, p_213844_1_.field_77275_b),
+                 this.getBukkitEntity()
+         );
+         Bukkit.getServer().getPluginManager().callEvent(event);
+      }
+      // Paper end
    }
 
    public void func_213845_a(ChunkPos p_213845_1_) {
       if (this.func_70089_S()) {
          this.field_71135_a.func_147359_a(new SUnloadChunkPacket(p_213845_1_.field_77276_a, p_213845_1_.field_77275_b));
+         // Paper start
+         if (PlayerChunkUnloadEvent.getHandlerList().getRegisteredListeners().length > 0) {
+            PlayerChunkUnloadEvent event = new PlayerChunkUnloadEvent(
+                    this.getBukkitEntity().getWorld().getChunkAt(p_213845_1_.field_77276_a, p_213845_1_.field_77275_b),
+                    this.getBukkitEntity()
+            );
+            Bukkit.getServer().getPluginManager().callEvent(event);
+         }
+         // Paper end
       }
 
    }
@@ -1391,6 +_,8 @@
       if (itementity == null) {
          return null;
       } else {
+         if (captureDrops() != null) captureDrops().add(itementity);
+         else
          this.field_70170_p.func_217376_c(itementity);
          ItemStack itemstack = itementity.func_92059_d();
          if (p_146097_3_) {
@@ -1405,8 +_,156 @@
       }
    }
 
+   public String language = "en_us"; // private->public CraftBukkit
+   /**
+    * Returns the language last reported by the player as their local language.
+    * Defaults to en_us if the value is unknown.
+    */
+   public String getLanguage() {
+      return this.language;
+   }
+
+   // We need this as tablistDisplayname may be null even if the the event was fired.
+   private boolean hasTabListName = false;
+   private ITextComponent tabListDisplayName = null;
+   /**
+    * Force the name displayed in the tab list to refresh, by firing {@link net.minecraftforge.event.entity.player.PlayerEvent.TabListNameFormat}.
+    */
+   public void refreshTabListName(){
+      ITextComponent oldName = this.tabListDisplayName;
+      this.tabListDisplayName = ForgeEventFactory.getPlayerTabListDisplayName(this);
+      if (!Objects.equals(oldName, this.tabListDisplayName))
+      {
+         this.func_184102_h().func_184103_al().func_148540_a(new SPlayerListItemPacket(SPlayerListItemPacket.Action.UPDATE_DISPLAY_NAME, this));
+      }
+   }
+
    @Nullable
    public IChatFilter func_244529_Q() {
       return this.field_244528_co;
+   }
+
+   // CraftBukkit start - Add per-player time and weather.
+   public long timeOffset = 0;
+   public boolean relativeTime = true;
+   public long getPlayerTime() {
+      if (this.relativeTime) {
+         // Adds timeOffset to the current server time.
+         return this.field_70170_p.func_72820_D() + this.timeOffset;
+      } else {
+         // Adds timeOffset to the beginning of this day.
+         return this.field_70170_p.func_72820_D() - (this.field_70170_p.func_72820_D() % 24000) + this.timeOffset;
+      }
+   }
+   public WeatherType weather = null;
+   public WeatherType getPlayerWeather() {
+      return this.weather;
+   }
+   public void setPlayerWeather(WeatherType type, boolean plugin) {
+      if (!plugin && this.weather != null) {
+         return;
+      }
+      if (plugin) {
+         this.weather = type;
+      }
+      // Fixed SPIGOT-5849: Constantly Raining in World 1.16
+      if (type == WeatherType.DOWNFALL) {
+         this.field_71135_a.func_147359_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241766_c_, 0));
+      } else {
+         this.field_71135_a.func_147359_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241765_b_, 0));
+      }
+   }
+   private float pluginRainPosition;
+   private float pluginRainPositionPrevious;
+   public void updateWeather(float oldRain, float newRain, float oldThunder, float newThunder) {
+      if (this.weather == null) {
+         // Vanilla
+         if (oldRain != newRain) {
+            this.field_71135_a.func_147359_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241771_h_, newRain));
+         }
+      } else {
+         // Plugin
+         if (pluginRainPositionPrevious != pluginRainPosition) {
+            this.field_71135_a.func_147359_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241771_h_, pluginRainPosition));
+         }
+      }
+      if (oldThunder != newThunder) {
+         if (weather == WeatherType.DOWNFALL || weather == null) {
+            this.field_71135_a.func_147359_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241772_i_, newThunder));
+         } else {
+            this.field_71135_a.func_147359_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241772_i_, 0));
+         }
+      }
+   }
+   public void tickWeather() {
+      if (this.weather == null) return;
+      pluginRainPositionPrevious = pluginRainPosition;
+      if (weather == WeatherType.DOWNFALL) {
+         pluginRainPosition += 0.01;
+      } else {
+         pluginRainPosition -= 0.01;
+      }
+      pluginRainPosition = MathHelper.func_76131_a(pluginRainPosition, 0.0F, 1.0F);
+   }
+   public void resetPlayerWeather() {
+      this.weather = null;
+      this.setPlayerWeather(this.field_70170_p.func_72912_H().func_76059_o() ? WeatherType.DOWNFALL : WeatherType.CLEAR, false);
+   }
+   @Override
+   public String toString() {
+      return super.toString() + "(" + this.func_200200_C_() + " at " + this.func_226277_ct_() + "," + this.func_226278_cu_() + "," + this.func_226281_cx_() + ")";
+   }
+   // SPIGOT-1903, MC-98153
+   public void forceSetPositionRotation(double x, double y, double z, float yaw, float pitch) {
+      this.func_70012_b(x, y, z, yaw, pitch);
+      this.field_71135_a.func_184342_d();
+   }
+   @Override
+   public boolean func_70610_aX() {
+      return super.func_70610_aX() || !getBukkitEntity().isOnline();
+   }
+   @Override
+   public Scoreboard func_96123_co() {
+      return getBukkitEntity().getScoreboard().getHandle();
+   }
+   public void reset() {
+      float exp = 0;
+      boolean keepInventory = this.field_70170_p.func_82736_K().func_223586_b(GameRules.field_223600_c);
+      if (this.keepLevel || keepInventory) {
+         exp = this.field_71106_cc;
+         this.newTotalExp = this.field_71067_cb;
+         this.newLevel = this.field_71068_ca;
+      }
+      this.func_70606_j(this.func_110138_aP());
+      this.field_190534_ay = 0;
+      this.field_70143_R = 0;
+      this.field_71100_bB = new FoodStats(this);
+      this.field_71068_ca = this.newLevel;
+      this.field_71067_cb = this.newTotalExp;
+      this.field_71106_cc = 0;
+      this.field_70725_aQ = 0;
+      this.setArrowCountInEntity(0, true);
+      this.clearActivePotions(org.bukkit.event.entity.EntityPotionEffectEvent.Cause.DEATH);
+      this.field_70752_e = true;
+      this.field_71070_bA = this.field_71069_bz;
+      this.field_70717_bb = null;
+      this.field_70755_b = null;
+      this.field_94063_bt = new CombatTracker(this);
+      this.field_71144_ck = -1;
+      if (this.keepLevel || keepInventory) {
+         this.field_71106_cc = exp;
+      } else {
+         this.func_82242_a(this.newExp);
+      }
+      this.keepLevel = false;
+   }
+   @Override
+   public CraftPlayer getBukkitEntity() {
+      return (CraftPlayer) super.getBukkitEntity();
+   }
+   // CraftBukkit end
+
+   public boolean initialized() {
+      return this.initialized;
    }
 }
